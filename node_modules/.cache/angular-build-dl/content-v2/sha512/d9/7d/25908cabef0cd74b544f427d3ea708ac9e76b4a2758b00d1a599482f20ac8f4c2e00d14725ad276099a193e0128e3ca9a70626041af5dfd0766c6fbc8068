{"version":3,"sources":["webpack:///src/app/pages/forgot/forgot.component.scss","webpack:///src/app/pages/forgot/forgot.component.ts","webpack:///src/app/pages/forgot/forgot.component.html","webpack:///src/app/pages/forgot/forgot.module.ts","webpack:///src/app/pages/forgot/forgot-routing.module.ts"],"names":["ForgotComponent","api","util","location","div","otp_id","email","otpSent","otp","password","confirm","temp","country_code","mobile","setTimeout","default_country_code","recaptchaVerifier","auth","RecaptchaVerifier","size","callback","response","event","console","log","emailfilter","test","error","translate","show","post_public","then","data","hide","status","message","apiErrorHandler","back","smsGateway","param","signInWithPhoneNumber","success","type","reset_pwd","verifyEmailOTP","verifyFirebaseOTP","verifyPhoneOTP","id","enterVerificationCode","userData","generateTokenFromCreds","updatePasswordWithEmail","updatePasswordFromFirebase","updatePasswordWithPhone","post_temp","fire","position","icon","title","showConfirmButton","timer","key","selector","template","ForgotModule","declarations","imports","routes","path","component","ForgotRoutingModule","forChild","exports"],"mappings":"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","file":"pages-forgot-forgot-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3Jnb3QuY29tcG9uZW50LnNjc3MifQ== */\";","\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { UtilService } from '../../services/util.service';\nimport Swal from 'sweetalert2';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n  div: any = 1;\n  otp_id: any = '';\n  email: any = '';\n  otpSent: boolean = false;\n  otp: any = '';\n\n  password: any = '';\n  confirm: any = '';\n  temp: any = '';\n\n  country_code: any = '';\n  mobile: any = '';\n  recaptchaVerifier: firebase.default.auth.RecaptchaVerifier;\n  constructor(\n    public api: ApiService,\n    public util: UtilService,\n    private location: Location\n  ) {\n    setTimeout(() => {\n      this.country_code = this.util.default_country_code;\n    }, 1000);\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      // if (!firebase.default.app.length) {\n      //   firebase.default.initializeApp(environment.firebase);\n      // } else {\n      //   firebase.default.app();\n      // }\n\n      this.recaptchaVerifier = new firebase.default.auth.RecaptchaVerifier('sign-in-button', {\n        size: 'invisible',\n        callback: (response) => {\n\n        },\n        'expired-callback': () => {\n        }\n      });\n    }, 5000);\n\n  }\n  onOtpChange(event) {\n    console.log(event);\n    this.otp = event;\n  }\n\n  goToTabs() {\n\n    const emailfilter = /^[\\w._-]+[+]?[\\w._-]+@[\\w.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailfilter.test(this.email)) {\n      this.util.error(this.util.translate('Please enter valid email'));\n      return false;\n    }\n    console.log('login');\n\n    this.util.show();\n    this.api.post_public('v1/auth/verifyEmailForReset', { email: this.email }).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data === true && data.otp_id) {\n        // send otp from api\n        // this.openVerificationModal(data.otp_id, this.login.email, this.login);\n        this.otpSent = true;\n        this.otp_id = data.otp_id;\n      } else if (data && data.status && data.status === 500 && data.data === false) {\n        this.util.error(data.message);\n      }\n    }, error => {\n      this.util.hide();\n      this.util.apiErrorHandler(error);\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      this.util.apiErrorHandler(error);\n    });\n  }\n\n  goToBack() {\n    this.location.back();\n  }\n\n  sendPhoneOTP() {\n    if (this.util.smsGateway == '2') {\n      const param = {\n        country_code: '+' + this.country_code,\n        mobile: this.mobile\n      }\n      this.util.show();\n      this.api.post_public('v1/auth/verifyPhoneForFirebase', param).then((data: any) => {\n        console.log(data);\n        this.util.hide();\n        if (data && data.status && data.status == 200 && data.data) {\n          console.log('open firebase web version');\n          this.util.show();\n          this.api.signInWithPhoneNumber(this.recaptchaVerifier, param.country_code + param.mobile).then(\n            success => {\n              this.util.hide();\n              this.otpSent = true;\n            }\n          ).catch(error => {\n            this.util.hide();\n            console.log(error);\n            this.util.error(error);\n          });\n\n        }\n      }, error => {\n        this.util.hide();\n        this.util.apiErrorHandler(error);\n      }).catch((error) => {\n        this.util.hide();\n        console.log(error);\n        this.util.apiErrorHandler(error);\n      });\n    } else {\n      this.util.show();\n      const param = {\n        country_code: '+' + this.country_code,\n        mobile: this.mobile,\n        type: 'store'\n      }\n      this.api.post_public('v1/otp/verifyPhone', param).then((data: any) => {\n        console.log(data);\n        this.util.hide();\n        if (data && data.status && data.status == 200 && data.data == true && data.otp_id) {\n          this.otp_id = data.otp_id;\n          this.otpSent = true;\n        } else if (data && data.status && data.status == 500 && data.data == false) {\n          this.util.error(this.util.translate('Something went wrong'));\n        }\n      }, error => {\n        this.util.hide();\n        this.util.apiErrorHandler(error);\n      }).catch((error) => {\n        this.util.hide();\n        console.log(error);\n        this.util.apiErrorHandler(error);\n      });\n    }\n  }\n\n  verifyOTP() {\n    if (this.otp == '' || this.otp == null || !this.otp) {\n      this.util.error('OTP is required');\n      return false;\n    }\n    console.log(this.otp_id, this.otp, this.util.reset_pwd);\n    // this.div = 2;\n    if (this.util.reset_pwd == 0) {\n      this.verifyEmailOTP();\n    } else if (this.util.smsGateway == '2' && this.util.reset_pwd == 1) {\n      this.verifyFirebaseOTP();\n    } else if (this.util.reset_pwd == 1 && this.util.smsGateway != '2') {\n      this.verifyPhoneOTP();\n    }\n  }\n\n  verifyEmailOTP() {\n    const param = {\n      id: this.otp_id,\n      otp: this.otp,\n      type: 'email',\n      email: this.email,\n      country_code: 'NA',\n      mobile: 'NA'\n    };\n    this.util.show();\n    this.api.post_public('v1/otp/verifyOTPReset', param).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        this.div = 2;\n        this.temp = data.temp;\n        console.log('temp token', this.temp);\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  verifyFirebaseOTP() {\n    this.util.show();\n    this.api.enterVerificationCode(this.otp).then(\n      userData => {\n        this.util.hide();\n        this.generateTokenFromCreds();\n        console.log(userData);\n      }\n    ).catch(error => {\n      console.log(error);\n      this.util.hide();\n      this.util.error(error);\n    });\n  }\n\n  generateTokenFromCreds() {\n    this.util.show();\n    const param = {\n      country_code: '+' + this.country_code,\n      mobile: this.mobile\n    }\n    this.api.post_public('v1/otp/generateTempToken', param).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status == 200) {\n        this.div = 2;\n        this.temp = data.temp;\n        console.log('temp token', this.temp);\n      }\n    }, error => {\n      this.util.hide();\n      this.util.apiErrorHandler(error);\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      this.util.apiErrorHandler(error);\n    });\n  }\n  verifyPhoneOTP() {\n    const param = {\n      id: this.otp_id,\n      otp: this.otp,\n      type: 'phone',\n      email: 'NA',\n      country_code: '+' + this.country_code,\n      mobile: this.mobile\n    };\n    this.util.show();\n    this.api.post_public('v1/otp/verifyOTPReset', param).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        this.div = 2;\n        this.temp = data.temp;\n        console.log('temp token', this.temp);\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  updatePassword() {\n    if (this.password == '' || this.password == null || !this.password || this.confirm == '' || this.confirm == null || !this.confirm) {\n      this.util.error('Password is required');\n      return false;\n    }\n\n    if (this.password != this.confirm) {\n      this.util.error(this.util.translate('Password does not match'));\n      return false;\n    }\n\n    console.log('update');\n    if (this.util.reset_pwd == 0) {\n      this.updatePasswordWithEmail();\n    } else if (this.util.smsGateway == '2' && this.util.reset_pwd == 1) {\n      this.updatePasswordFromFirebase();\n    } else if (this.util.reset_pwd == 1 && this.util.smsGateway != '2') {\n      this.updatePasswordWithPhone();\n    }\n  }\n\n  updatePasswordWithEmail() {\n    const param = {\n      id: this.otp_id,\n      email: this.email,\n      password: this.password\n    };\n    this.util.show();\n    this.api.post_temp('v1/password/updateUserPasswordWithEmail', param, this.temp).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: this.util.translate('Password Updated'),\n          showConfirmButton: false,\n          timer: 1500\n        })\n        this.location.back();\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  updatePasswordFromFirebase() {\n    const param = {\n      country_code: '+' + this.country_code,\n      mobile: this.mobile,\n      password: this.password,\n    };\n    this.api.post_temp('v1/password/updatePasswordFromFirebase', param, this.temp).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: this.util.translate('Password Updated'),\n          showConfirmButton: false,\n          timer: 1500\n        })\n        this.location.back();\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  updatePasswordWithPhone() {\n\n    const param = {\n      id: this.otp_id,\n      country_code: '+' + this.country_code,\n      mobile: this.mobile,\n      password: this.password,\n      key: '+' + this.country_code + this.mobile\n    };\n    this.api.post_temp('v1/password/updateUserPasswordWithPhone', param, this.temp).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: this.util.translate('Password Updated'),\n          showConfirmButton: false,\n          timer: 1500\n        })\n        this.location.back();\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n}\n","export default \"<ngx-spinner></ngx-spinner>\\n<div id=\\\"sign-in-button\\\"></div>\\n<div class=\\\"app-body\\\">\\n    <main class=\\\"main d-flex align-items-center login\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 mx-auto\\\">\\n                    <div class=\\\"card-group\\\">\\n                        <div class=\\\"card p-4\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <form *ngIf=\\\"util.reset_pwd == 0 && div == 1\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Send OTP')}}</p>\\n\\n                                    <div class=\\\"input-group mb-3\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-at\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\"\\n                                            [placeholder]=\\\"util.translate('Email address')\\\" autocomplete=\\\"email\\\"\\n                                            required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n                                    <div class=\\\"otp_content\\\" *ngIf=\\\"otpSent == true\\\">\\n                                        <p>{{util.translate('Enter OTP')}} </p>\\n                                        <ng-otp-input (onInputChange)=\\\"onOtpChange($event)\\\"\\n                                            [config]=\\\"{length:6,inputStyles:{'width': '40px','height': '40px','border':'1px solid lightgray','background-color':'white'}}\\\">\\n                                        </ng-otp-input>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==false\\\"\\n                                                (click)=\\\"goToTabs()\\\">{{util.translate('Send OTP')}}</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==true\\\"\\n                                                (click)=\\\"verifyOTP()\\\">{{util.translate('Verify OTP')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n\\n                                <form *ngIf=\\\"util.reset_pwd == 0 &&  div == 2\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Update Password')}}</p>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"\\n                                            [placeholder]=\\\"util.translate('Password')\\\" autocomplete=\\\"current-password\\\"\\n                                            required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirm\\\"\\n                                            [placeholder]=\\\"util.translate('Confirm Password')\\\"\\n                                            autocomplete=\\\"current-password\\\" required\\n                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\"\\n                                                (click)=\\\"updatePassword()\\\">{{util.translate('Update')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n\\n                                <form *ngIf=\\\"util.reset_pwd == 1 && div == 1\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Send OTP')}}</p>\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-3\\\">\\n                                            <div *ngIf=\\\"util.countrys?.length\\\">\\n                                                <select id=\\\"ccmonth\\\" [(ngModel)]=\\\"country_code\\\"\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                                                    <option *ngFor=\\\"let item of util.countrys\\\"\\n                                                        [value]=\\\"item.dialling_code\\\">\\n                                                        {{item.country_name}} </option>\\n                                                </select>\\n                                            </div>\\n                                            <div *ngIf=\\\"!util.countrys?.length\\\">\\n                                                <input type=\\\"tel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"country_code\\\"\\n                                                    [placeholder]=\\\"util.translate('Country Code')\\\" [disabled]=\\\"true\\\"\\n                                                    autocomplete=\\\"phone\\\" required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-9\\\">\\n                                            <div class=\\\"input-group mb-3\\\">\\n                                                <div class=\\\"input-group-prepend\\\">\\n                                                    <span class=\\\"input-group-text\\\"><i class=\\\"cil-phone\\\"></i></span>\\n                                                </div>\\n                                                <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobile\\\"\\n                                                    [placeholder]=\\\"util.translate('Phone')\\\" autocomplete=\\\"phone\\\"\\n                                                    required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"otp_content\\\" *ngIf=\\\"otpSent == true\\\">\\n                                        <p>Enter OTP</p>\\n                                        <ng-otp-input (onInputChange)=\\\"onOtpChange($event)\\\"\\n                                            [config]=\\\"{length:6,inputStyles:{'width': '40px','height': '40px','border':'1px solid lightgray','background-color':'white'}}\\\">\\n                                        </ng-otp-input>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==false\\\"\\n                                                (click)=\\\"sendPhoneOTP()\\\">{{util.translate('Send OTP')}}</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==true\\\"\\n                                                (click)=\\\"verifyOTP()\\\">{{util.translate('Verify OTP')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n\\n                                <form *ngIf=\\\"util.reset_pwd == 1 &&  div == 2\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Update Password')}}</p>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"\\n                                            [placeholder]=\\\"util.translate('Password')\\\" autocomplete=\\\"current-password\\\"\\n                                            required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirm\\\"\\n                                            [placeholder]=\\\"util.translate('Confirm Password')\\\"\\n                                            autocomplete=\\\"current-password\\\" required\\n                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\"\\n                                                (click)=\\\"updatePassword()\\\">{{util.translate('Update')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\";","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotRoutingModule } from './forgot-routing.module';\nimport { ForgotComponent } from './forgot.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgOtpInputModule } from 'ng-otp-input';\n\n@NgModule({\n  declarations: [\n    ForgotComponent\n  ],\n  imports: [\n    CommonModule,\n    ForgotRoutingModule,\n    FormsModule,\n    NgxSpinnerModule,\n    NgOtpInputModule\n  ]\n})\nexport class ForgotModule { }\n","\nimport { ForgotComponent } from './forgot.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotRoutingModule { }\n"]}