{"version":3,"sources":["./src/app/pages/forgot/forgot.component.scss","./src/app/pages/forgot/forgot.component.ts","./src/app/pages/forgot/forgot.component.html","./src/app/pages/forgot/forgot.module.ts","./src/app/pages/forgot/forgot-routing.module.ts"],"names":[],"mappings":"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","file":"pages-forgot-forgot-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3Jnb3QuY29tcG9uZW50LnNjc3MifQ== */\";","\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { UtilService } from '../../services/util.service';\nimport Swal from 'sweetalert2';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n  div: any = 1;\n  otp_id: any = '';\n  email: any = '';\n  otpSent: boolean = false;\n  otp: any = '';\n\n  password: any = '';\n  confirm: any = '';\n  temp: any = '';\n\n  country_code: any = '';\n  mobile: any = '';\n  recaptchaVerifier: firebase.default.auth.RecaptchaVerifier;\n  constructor(\n    public api: ApiService,\n    public util: UtilService,\n    private location: Location\n  ) {\n    setTimeout(() => {\n      this.country_code = this.util.default_country_code;\n    }, 1000);\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      // if (!firebase.default.app.length) {\n      //   firebase.default.initializeApp(environment.firebase);\n      // } else {\n      //   firebase.default.app();\n      // }\n\n      this.recaptchaVerifier = new firebase.default.auth.RecaptchaVerifier('sign-in-button', {\n        size: 'invisible',\n        callback: (response) => {\n\n        },\n        'expired-callback': () => {\n        }\n      });\n    }, 5000);\n\n  }\n  onOtpChange(event) {\n    console.log(event);\n    this.otp = event;\n  }\n\n  goToTabs() {\n\n    const emailfilter = /^[\\w._-]+[+]?[\\w._-]+@[\\w.-]+\\.[a-zA-Z]{2,6}$/;\n    if (!emailfilter.test(this.email)) {\n      this.util.error(this.util.translate('Please enter valid email'));\n      return false;\n    }\n    console.log('login');\n\n    this.util.show();\n    this.api.post_public('v1/auth/verifyEmailForReset', { email: this.email }).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data === true && data.otp_id) {\n        // send otp from api\n        // this.openVerificationModal(data.otp_id, this.login.email, this.login);\n        this.otpSent = true;\n        this.otp_id = data.otp_id;\n      } else if (data && data.status && data.status === 500 && data.data === false) {\n        this.util.error(data.message);\n      }\n    }, error => {\n      this.util.hide();\n      this.util.apiErrorHandler(error);\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      this.util.apiErrorHandler(error);\n    });\n  }\n\n  goToBack() {\n    this.location.back();\n  }\n\n  sendPhoneOTP() {\n    if (this.util.smsGateway == '2') {\n      const param = {\n        country_code: '+' + this.country_code,\n        mobile: this.mobile\n      }\n      this.util.show();\n      this.api.post_public('v1/auth/verifyPhoneForFirebase', param).then((data: any) => {\n        console.log(data);\n        this.util.hide();\n        if (data && data.status && data.status == 200 && data.data) {\n          console.log('open firebase web version');\n          this.util.show();\n          this.api.signInWithPhoneNumber(this.recaptchaVerifier, param.country_code + param.mobile).then(\n            success => {\n              this.util.hide();\n              this.otpSent = true;\n            }\n          ).catch(error => {\n            this.util.hide();\n            console.log(error);\n            this.util.error(error);\n          });\n\n        }\n      }, error => {\n        this.util.hide();\n        this.util.apiErrorHandler(error);\n      }).catch((error) => {\n        this.util.hide();\n        console.log(error);\n        this.util.apiErrorHandler(error);\n      });\n    } else {\n      this.util.show();\n      const param = {\n        country_code: '+' + this.country_code,\n        mobile: this.mobile\n      }\n      this.api.post_public('v1/otp/verifyPhone', param).then((data: any) => {\n        console.log(data);\n        this.util.hide();\n        if (data && data.status && data.status == 200 && data.data == true && data.otp_id) {\n          this.otp_id = data.otp_id;\n          this.otpSent = true;\n        } else if (data && data.status && data.status == 500 && data.data == false) {\n          this.util.error(this.util.translate('Something went wrong'));\n        }\n      }, error => {\n        this.util.hide();\n        this.util.apiErrorHandler(error);\n      }).catch((error) => {\n        this.util.hide();\n        console.log(error);\n        this.util.apiErrorHandler(error);\n      });\n    }\n  }\n\n  verifyOTP() {\n    if (this.otp == '' || this.otp == null || !this.otp) {\n      this.util.error('OTP is required');\n      return false;\n    }\n    console.log(this.otp_id, this.otp, this.util.reset_pwd);\n    // this.div = 2;\n    if (this.util.reset_pwd == 0) {\n      this.verifyEmailOTP();\n    } else if (this.util.smsGateway == '2' && this.util.reset_pwd == 1) {\n      this.verifyFirebaseOTP();\n    } else if (this.util.reset_pwd == 1 && this.util.smsGateway != '2') {\n      this.verifyPhoneOTP();\n    }\n  }\n\n  verifyEmailOTP() {\n    const param = {\n      id: this.otp_id,\n      otp: this.otp,\n      type: 'email',\n      email: this.email,\n      country_code: 'NA',\n      mobile: 'NA'\n    };\n    this.util.show();\n    this.api.post_public('v1/otp/verifyOTPReset', param).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        this.div = 2;\n        this.temp = data.temp;\n        console.log('temp token', this.temp);\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  verifyFirebaseOTP() {\n    this.util.show();\n    this.api.enterVerificationCode(this.otp).then(\n      userData => {\n        this.util.hide();\n        this.generateTokenFromCreds();\n        console.log(userData);\n      }\n    ).catch(error => {\n      console.log(error);\n      this.util.hide();\n      this.util.error(error);\n    });\n  }\n\n  generateTokenFromCreds() {\n    this.util.show();\n    const param = {\n      country_code: '+' + this.country_code,\n      mobile: this.mobile\n    }\n    this.api.post_public('v1/otp/generateTempToken', param).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status == 200) {\n        this.div = 2;\n        this.temp = data.temp;\n        console.log('temp token', this.temp);\n      }\n    }, error => {\n      this.util.hide();\n      this.util.apiErrorHandler(error);\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      this.util.apiErrorHandler(error);\n    });\n  }\n  verifyPhoneOTP() {\n    const param = {\n      id: this.otp_id,\n      otp: this.otp,\n      type: 'phone',\n      email: 'NA',\n      country_code: '+' + this.country_code,\n      mobile: this.mobile\n    };\n    this.util.show();\n    this.api.post_public('v1/otp/verifyOTPReset', param).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        this.div = 2;\n        this.temp = data.temp;\n        console.log('temp token', this.temp);\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  updatePassword() {\n    if (this.password == '' || this.password == null || !this.password || this.confirm == '' || this.confirm == null || !this.confirm) {\n      this.util.error('Password is required');\n      return false;\n    }\n\n    if (this.password != this.confirm) {\n      this.util.error(this.util.translate('Password does not match'));\n      return false;\n    }\n\n    console.log('update');\n    if (this.util.reset_pwd == 0) {\n      this.updatePasswordWithEmail();\n    } else if (this.util.smsGateway == '2' && this.util.reset_pwd == 1) {\n      this.updatePasswordFromFirebase();\n    } else if (this.util.reset_pwd == 1 && this.util.smsGateway != '2') {\n      this.updatePasswordWithPhone();\n    }\n  }\n\n  updatePasswordWithEmail() {\n    const param = {\n      id: this.otp_id,\n      email: this.email,\n      password: this.password\n    };\n    this.util.show();\n    this.api.post_temp('v1/password/updateUserPasswordWithEmail', param, this.temp).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: this.util.translate('Password Updated'),\n          showConfirmButton: false,\n          timer: 1500\n        })\n        this.location.back();\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  updatePasswordFromFirebase() {\n    const param = {\n      country_code: '+' + this.country_code,\n      mobile: this.mobile,\n      password: this.password,\n    };\n    this.api.post_temp('v1/password/updatePasswordFromFirebase', param, this.temp).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: this.util.translate('Password Updated'),\n          showConfirmButton: false,\n          timer: 1500\n        })\n        this.location.back();\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n\n  updatePasswordWithPhone() {\n\n    const param = {\n      id: this.otp_id,\n      country_code: '+' + this.country_code,\n      mobile: this.mobile,\n      password: this.password,\n      key: '+' + this.country_code + this.mobile\n    };\n    this.api.post_temp('v1/password/updateUserPasswordWithPhone', param, this.temp).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status && data.status === 200 && data.data) {\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: this.util.translate('Password Updated'),\n          showConfirmButton: false,\n          timer: 1500\n        })\n        this.location.back();\n      }\n    }, error => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    }).catch((error) => {\n      this.util.hide();\n      console.log(error);\n      if (error && error.status === 401 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      if (error && error.status === 500 && error.error.error) {\n        this.util.error(error.error.error);\n        return false;\n      }\n      this.util.hide();\n      this.util.error(this.util.translate('Wrong OTP'));\n    });\n  }\n}\n","export default \"<ngx-spinner></ngx-spinner>\\n<div id=\\\"sign-in-button\\\"></div>\\n<div class=\\\"app-body\\\">\\n    <main class=\\\"main d-flex align-items-center login\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 mx-auto\\\">\\n                    <div class=\\\"card-group\\\">\\n                        <div class=\\\"card p-4\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <form *ngIf=\\\"util.reset_pwd == 0 && div == 1\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Send OTP')}}</p>\\n\\n                                    <div class=\\\"input-group mb-3\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-at\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\"\\n                                            [placeholder]=\\\"util.translate('Email address')\\\" autocomplete=\\\"email\\\"\\n                                            required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n                                    <div class=\\\"otp_content\\\" *ngIf=\\\"otpSent == true\\\">\\n                                        <p>{{util.translate('Enter OTP')}} </p>\\n                                        <ng-otp-input (onInputChange)=\\\"onOtpChange($event)\\\"\\n                                            [config]=\\\"{length:6,inputStyles:{'width': '40px','height': '40px','border':'1px solid lightgray','background-color':'white'}}\\\">\\n                                        </ng-otp-input>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==false\\\"\\n                                                (click)=\\\"goToTabs()\\\">{{util.translate('Send OTP')}}</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==true\\\"\\n                                                (click)=\\\"verifyOTP()\\\">{{util.translate('Verify OTP')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n\\n                                <form *ngIf=\\\"util.reset_pwd == 0 &&  div == 2\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Update Password')}}</p>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"\\n                                            [placeholder]=\\\"util.translate('Password')\\\" autocomplete=\\\"current-password\\\"\\n                                            required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirm\\\"\\n                                            [placeholder]=\\\"util.translate('Confirm Password')\\\"\\n                                            autocomplete=\\\"current-password\\\" required\\n                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\"\\n                                                (click)=\\\"updatePassword()\\\">{{util.translate('Update')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n\\n                                <form *ngIf=\\\"util.reset_pwd == 1 && div == 1\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Send OTP')}}</p>\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-3\\\">\\n                                            <div *ngIf=\\\"util.countrys?.length\\\">\\n                                                <select id=\\\"ccmonth\\\" [(ngModel)]=\\\"country_code\\\"\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                                                    <option *ngFor=\\\"let item of util.countrys\\\"\\n                                                        [value]=\\\"item.dialling_code\\\">\\n                                                        {{item.country_name}} </option>\\n                                                </select>\\n                                            </div>\\n                                            <div *ngIf=\\\"!util.countrys?.length\\\">\\n                                                <input type=\\\"tel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"country_code\\\"\\n                                                    [placeholder]=\\\"util.translate('Country Code')\\\" [disabled]=\\\"true\\\"\\n                                                    autocomplete=\\\"phone\\\" required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-9\\\">\\n                                            <div class=\\\"input-group mb-3\\\">\\n                                                <div class=\\\"input-group-prepend\\\">\\n                                                    <span class=\\\"input-group-text\\\"><i class=\\\"cil-phone\\\"></i></span>\\n                                                </div>\\n                                                <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mobile\\\"\\n                                                    [placeholder]=\\\"util.translate('Phone')\\\" autocomplete=\\\"phone\\\"\\n                                                    required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"otp_content\\\" *ngIf=\\\"otpSent == true\\\">\\n                                        <p>Enter OTP</p>\\n                                        <ng-otp-input (onInputChange)=\\\"onOtpChange($event)\\\"\\n                                            [config]=\\\"{length:6,inputStyles:{'width': '40px','height': '40px','border':'1px solid lightgray','background-color':'white'}}\\\">\\n                                        </ng-otp-input>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==false\\\"\\n                                                (click)=\\\"sendPhoneOTP()\\\">{{util.translate('Send OTP')}}</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\" *ngIf=\\\"otpSent ==true\\\"\\n                                                (click)=\\\"verifyOTP()\\\">{{util.translate('Verify OTP')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n\\n                                <form *ngIf=\\\"util.reset_pwd == 1 &&  div == 2\\\">\\n                                    <div style=\\\"text-align: center;\\\">\\n                                        <img src=\\\"assets/img/brand/big_logo.png\\\" class=\\\"logo\\\">\\n                                    </div>\\n                                    <h1>{{util.translate('Reset Password')}}</h1>\\n                                    <p class=\\\"text-muted\\\">{{util.translate('Update Password')}}</p>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"\\n                                            [placeholder]=\\\"util.translate('Password')\\\" autocomplete=\\\"current-password\\\"\\n                                            required [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n                                    <div class=\\\"input-group mb-4\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                                        </div>\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirm\\\"\\n                                            [placeholder]=\\\"util.translate('Confirm Password')\\\"\\n                                            autocomplete=\\\"current-password\\\" required\\n                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </div>\\n\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-6\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\"\\n                                                (click)=\\\"updatePassword()\\\">{{util.translate('Update')}}</button>\\n                                        </div>\\n                                    </div>\\n\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\";","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotRoutingModule } from './forgot-routing.module';\nimport { ForgotComponent } from './forgot.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgOtpInputModule } from 'ng-otp-input';\n\n@NgModule({\n  declarations: [\n    ForgotComponent\n  ],\n  imports: [\n    CommonModule,\n    ForgotRoutingModule,\n    FormsModule,\n    NgxSpinnerModule,\n    NgOtpInputModule\n  ]\n})\nexport class ForgotModule { }\n","\nimport { ForgotComponent } from './forgot.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotRoutingModule { }\n"],"sourceRoot":"webpack:///"}