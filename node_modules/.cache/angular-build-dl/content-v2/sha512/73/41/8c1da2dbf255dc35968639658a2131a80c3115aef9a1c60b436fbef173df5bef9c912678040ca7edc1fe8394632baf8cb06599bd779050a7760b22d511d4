(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-stats-stats-module"],{

/***/ "2zol":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/stats/stats.component.html ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n<ngx-spinner></ngx-spinner>\n<div class=\"animated fadeIn\">\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    {{util.translate('Stats')}}\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card\">\n                                <div class=\"card-body\">\n                                    <h5>{{util.translate('Get Stats')}} </h5>\n                                </div>\n                                <div class=\"card-body reset-table p-t-0\">\n                                    <div class=\"form-group row\">\n\n                                        <div class=\"col-sm-6\">\n                                            <label>{{util.translate('From Date')}} </label>\n                                            <input type=\"date\" [(ngModel)]=\"from\" class=\"form-control\"\n                                                [placeholder]=\"util.translate('From Date')\">\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <label>{{util.translate('To Date')}} </label>\n                                            <input type=\"date\" [(ngModel)]=\"to\" class=\"form-control\"\n                                                [placeholder]=\"util.translate('To Date')\">\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group row\">\n                                        <div class=\"col-sm-12\">\n                                            <button class=\"btn btn-danger btn-round\"\n                                                (click)=\"getStats()\">{{util.translate('Get Stats')}}\n                                            </button>\n                                            <button style=\"margin-left: 20px;\" [useExistingCss]=\"true\"\n                                                [printTitle]=\"storename\" printSectionId=\"print-section\" ngxPrint\n                                                *ngIf=\"from && to && storeOrder?.length\" class=\"btn btn-primary\"><i\n                                                    class=\"icofont icofont-printer\"></i>{{util.translate('Print')}}\n                                            </button>\n\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <h2 style=\"text-align: center;\" *ngIf=\"from && to && !storeOrder?.length && apiCalled\">\n                        {{util.translate('No Orders Found')}}\n                    </h2>\n                    <div class=\"row\" id=\"print-section\" *ngIf=\"from && to && storeOrder?.length\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card\">\n                                <div class=\"card-body\" style=\"padding: 20px;\">\n                                    <h3 style=\"text-align: center;color: #7ec6aa;\">{{util.general.name}}</h3>\n                                    <p style=\"text-align: center;color: #ED7669;\">{{getDate(from)}} to {{getDate(to)}}\n                                    </p>\n                                    <p\n                                        style=\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;\">\n                                        {{util.general.name}}</p>\n                                    <p style=\"text-align: right;font-weight: bold;margin: 0px !important;\">\n                                        {{util.general.address}} <br> {{util.general.city}} {{util.general.state}}<br>\n                                        {{util.general.country}} {{util.general.zip}}\n                                    </p>\n                                    <p style=\"text-align: right;font-weight: bold;margin: 0px !important;\">\n                                        {{util.general.email}}</p>\n                                    <p style=\"text-align: right;font-weight: bold;margin: 0px !important;\">\n                                        {{util.general.mobile}}\n                                    </p>\n                                    <p style=\"text-align: left; font-weight: bold;margin: 0px;color: #aaafad;\">\n                                        {{util.store.name}}\n                                    </p>\n                                    <p style=\"text-align: left; font-weight: bold;color: #7EC6AA;\">{{today()}}</p>\n                                    <table class=\"table table-striped\">\n                                        <thead>\n                                            <tr class=\"text-uppercase\" style=\"color:#7ec6aa ;\">\n                                                <th>{{util.translate('Id')}} </th>\n                                                <th>{{util.translate('Ordered on')}} </th>\n                                                <th>{{util.translate('Items')}} </th>\n                                                <th>{{util.translate('Total')}} </th>\n                                                <th>{{util.translate('Discount')}} </th>\n                                                <th>{{util.translate('Grand Total')}} </th>\n                                                <th>{{util.translate('Commission')}} </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let item of storeOrder\" style=\"background-color: #F5F8FA;\">\n                                                <td>##{{item.id}}</td>\n                                                <td>{{item.date_time}}</td>\n                                                <td>\n                                                    <p *ngFor=\"let orders of item.orders;let i =index;\">\n                                                        {{orders.name}} <span\n                                                            *ngIf=\"item.orders.length -1 !== i\">,</span>\n                                                    </p>\n                                                </td>\n\n                                                <td>\n                                                    <span *ngIf=\"util.cside ==='left'\">{{util.currecny}}\n                                                        {{item.total}}\n                                                    </span>\n                                                    <span *ngIf=\"util.cside ==='right'\">{{item.total}}\n                                                        {{util.currecny}}</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"util.cside ==='left'\">{{util.currecny}}\n                                                        {{item.discount}} </span>\n                                                    <span *ngIf=\"util.cside ==='right'\">{{item.discount}}\n                                                        {{util.currecny}}</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"util.cside ==='left'\">{{util.currecny}}\n                                                        {{item.grand_total}} </span>\n                                                    <span *ngIf=\"util.cside ==='right'\">{{item.grand_total}}\n                                                        {{util.currecny}}</span>\n                                                </td>\n                                                <td>\n                                                    <span *ngIf=\"util.cside ==='left'\">{{util.currecny}}\n                                                        {{getCommisions(item.total)}}\n                                                    </span>\n                                                    <span *ngIf=\"util.cside ==='right'\">{{getCommisions(item.total)}}\n                                                        {{util.currecny}}</span>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <div class=\"row\" style=\"padding: 20px;\">\n                                        <div class=\"col-sm-6\"></div>\n                                        <div class=\"col-sm-4\">\n                                            <p\n                                                style=\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\">\n                                                {{util.translate('Total')}} </p>\n                                            <p\n                                                style=\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\">\n                                                {{util.translate('Commission')}}\n                                            </p>\n                                            <p\n                                                style=\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\">\n                                                {{util.translate('Amount Pay')}}\n                                            </p>\n                                        </div>\n                                        <div class=\"col-sm-2\">\n                                            <p\n                                                style=\"color: black !important;margin: 0px !important;text-align: right;\">\n\n                                                <span *ngIf=\"util.cside ==='left'\">{{util.currecny}} {{totalAmount}}\n                                                </span>\n                                                <span *ngIf=\"util.cside ==='right'\">{{totalAmount}}\n                                                    {{util.currecny}}</span>\n                                            </p>\n                                            <p\n                                                style=\"color: black !important; margin: 0px !important;text-align: right;\">\n\n                                                <span *ngIf=\"util.cside ==='left'\">{{util.currecny}} {{commisionAmount}}\n                                                </span>\n                                                <span *ngIf=\"util.cside ==='right'\">{{commisionAmount}}\n                                                    {{util.currecny}}</span>\n                                            </p>\n                                            <p\n                                                style=\"color: black !important;margin: 0px !important;text-align: right;\">\n                                                {{toPay}}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>");

/***/ }),

/***/ "LEg7":
/*!******************************************************!*\
  !*** ./node_modules/ngx-print/fesm2015/ngx-print.js ***!
  \******************************************************/
/*! exports provided: NgxPrintDirective, NgxPrintModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxPrintDirective", function() { return NgxPrintDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxPrintModule", function() { return NgxPrintModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "8Y7J");


/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

class NgxPrintDirective {
    constructor() {
        this._printStyle = [];
        /**
         *
         *
         * \@memberof NgxPrintDirective
         */
        this.useExistingCss = false;
        /**
         * A delay in milliseconds to force the print dialog to wait before opened. Default: 0
         *
         * \@memberof NgxPrintDirective
         */
        this.printDelay = 0;
        /**
         *
         *
         * @return html for the given tag
         *
         * \@memberof NgxPrintDirective
         */
        this._styleSheetFile = '';
    }
    /**
     *
     *
     * \@memberof NgxPrintDirective
     * @param {?} values
     * @return {?}
     */
    set printStyle(values) {
        for (let key in values) {
            if (values.hasOwnProperty(key)) {
                this._printStyle.push((key + JSON.stringify(values[key])).replace(/['"]+/g, ''));
            }
        }
        this.returnStyleValues();
    }
    /**
     *
     *
     * \@memberof NgxPrintDirective
     * @return {?} the string that create the stylesheet which will be injected
     * later within <style></style> tag.
     *
     * -join/replace to transform an array objects to css-styled string
     *
     */
    returnStyleValues() {
        return `<style> ${this._printStyle.join(' ').replace(/,/g, ';')} </style>`;
    }
    /**
     * \@memberof NgxPrintDirective
     * @param {?} cssList
     * @return {?}
     */
    set styleSheetFile(cssList) {
        /** @type {?} */
        let linkTagFn = (/**
         * @param {?} cssFileName
         * @return {?}
         */
        function (cssFileName) {
            return `<link rel="stylesheet" type="text/css" href="${cssFileName}">`;
        });
        if (cssList.indexOf(',') !== -1) {
            /** @type {?} */
            const valueArr = cssList.split(',');
            for (let val of valueArr) {
                this._styleSheetFile = this._styleSheetFile + linkTagFn(val);
            }
        }
        else {
            this._styleSheetFile = linkTagFn(cssList);
        }
    }
    /**
     * @private
     * @return {?} string which contains the link tags containing the css which will
     * be injected later within <head></head> tag.
     *
     */
    returnStyleSheetLinkTags() {
        return this._styleSheetFile;
    }
    /**
     * @private
     * @param {?} tag
     * @return {?}
     */
    getElementTag(tag) {
        /** @type {?} */
        const html = [];
        /** @type {?} */
        const elements = document.getElementsByTagName(tag);
        for (let index = 0; index < elements.length; index++) {
            html.push(elements[index].outerHTML);
        }
        return html.join('\r\n');
    }
    /**
     *
     * @private
     * @param {?} data the html element collection to save defaults to
     *
     * @return {?}
     */
    getFormData(data) {
        for (var i = 0; i < data.length; i++) {
            data[i].defaultValue = data[i].value;
            if (data[i].checked) {
                data[i].defaultChecked = true;
            }
        }
    }
    /**
     * @private
     * @return {?} html section to be printed along with some associated inputs
     *
     */
    getHtmlContents() {
        /** @type {?} */
        let printContents = document.getElementById(this.printSectionId);
        /** @type {?} */
        let innards = printContents.getElementsByTagName('input');
        this.getFormData(innards);
        /** @type {?} */
        let txt = printContents.getElementsByTagName('textarea');
        this.getFormData(txt);
        return printContents.innerHTML;
    }
    /**
     *
     *
     * \@memberof NgxPrintDirective
     * @return {?}
     */
    print() {
        /** @type {?} */
        let printContents;
        /** @type {?} */
        let popupWin;
        /** @type {?} */
        let styles = '';
        /** @type {?} */
        let links = '';
        /** @type {?} */
        const baseTag = this.getElementTag('base');
        if (this.useExistingCss) {
            styles = this.getElementTag('style');
            links = this.getElementTag('link');
        }
        printContents = this.getHtmlContents();
        popupWin = window.open("", "_blank", "top=0,left=0,height=auto,width=auto");
        popupWin.document.open();
        popupWin.document.write(`
      <html>
        <head>
          <title>${this.printTitle ? this.printTitle : ""}</title>
          ${baseTag}
          ${this.returnStyleValues()}
          ${this.returnStyleSheetLinkTags()}
          ${styles}
          ${links}
        </head>
        <body>
          ${printContents}
          <script defer>
            function triggerPrint(event) {
              window.removeEventListener('load', triggerPrint, false);
              setTimeout(function() {
                closeWindow(window.print());
              }, ${this.printDelay});
            }
            function closeWindow(){
                window.close();
            }
            window.addEventListener('load', triggerPrint, false);
          </script>
        </body>
      </html>`);
        popupWin.document.close();
    }
}
NgxPrintDirective.ɵfac = function NgxPrintDirective_Factory(t) { return new (t || NgxPrintDirective)(); };
NgxPrintDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: NgxPrintDirective, selectors: [["button", "ngxPrint", ""]], hostBindings: function NgxPrintDirective_HostBindings(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function NgxPrintDirective_click_HostBindingHandler() { return ctx.print(); });
    } }, inputs: { useExistingCss: "useExistingCss", printDelay: "printDelay", printStyle: "printStyle", styleSheetFile: "styleSheetFile", printSectionId: "printSectionId", printTitle: "printTitle" } });
NgxPrintDirective.propDecorators = {
    printSectionId: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"] }],
    printTitle: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"] }],
    useExistingCss: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"] }],
    printDelay: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"] }],
    printStyle: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"] }],
    styleSheetFile: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"] }],
    print: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"], args: ['click',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgxPrintDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: "button[ngxPrint]"
            }]
    }], function () { return []; }, { useExistingCss: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], printDelay: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], printStyle: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], styleSheetFile: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], 
    /**
     *
     *
     * \@memberof NgxPrintDirective
     * @return {?}
     */
    print: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['click']
        }], printSectionId: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], printTitle: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxPrintModule {
}
NgxPrintModule.ɵfac = function NgxPrintModule_Factory(t) { return new (t || NgxPrintModule)(); };
NgxPrintModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: NgxPrintModule });
NgxPrintModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](NgxPrintModule, { declarations: [NgxPrintDirective], exports: [NgxPrintDirective] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgxPrintModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                declarations: [NgxPrintDirective],
                imports: [],
                exports: [NgxPrintDirective]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */



//# sourceMappingURL=ngx-print.js.map

/***/ }),

/***/ "V1J6":
/*!************************************************!*\
  !*** ./src/app/pages/stats/stats.component.ts ***!
  \************************************************/
/*! exports provided: StatsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StatsComponent", function() { return StatsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_stats_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./stats.component.html */ "2zol");
/* harmony import */ var _stats_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stats.component.scss */ "x4SB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "wd/R");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/api.service */ "H+bZ");
/* harmony import */ var _services_util_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/util.service */ "2Rin");







let StatsComponent = class StatsComponent {
    constructor(util, api) {
        this.util = util;
        this.api = api;
        this.stores = [];
        this.allOrders = [];
        this.storeOrder = [];
        this.totalAmount = 0;
        this.commisionAmount = 0;
        this.toPay = 0;
        this.totalAmountsFromOrder = 0;
        this.storeId = parseInt(localStorage.getItem('uid'));
    }
    ngOnInit() {
    }
    getStats() {
        console.log('from', this.from);
        console.log('to', this.to);
        if (this.from && this.to) {
            console.log('ok');
            const param = {
                id: localStorage.getItem('uid'),
                from: moment__WEBPACK_IMPORTED_MODULE_4__(this.from, 'YYYY-MM-DD HH:mm A').utc(false).format('YYYY-MM-DD HH:mm'),
                to: moment__WEBPACK_IMPORTED_MODULE_4__(this.to, 'YYYY-MM-DD HH:mm A').utc(false).format('YYYY-MM-DD HH:mm'),
            };
            console.log(param);
            this.util.show();
            this.apiCalled = false;
            this.storeOrder = [];
            this.api.post_private('v1/orders/getStoreStatsDataWithDates', param).then((data) => {
                this.apiCalled = true;
                this.util.hide();
                console.log(data);
                if (data && data.status == 200 && data.data.length) {
                    this.storecommission = data.commission.commission;
                    console.log('commustion', this.storecommission);
                    let total = 0;
                    data.data.forEach((element) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                        if (((x) => { try {
                            JSON.parse(x);
                            return true;
                        }
                        catch (e) {
                            return false;
                        } })(element.orders)) {
                            element.orders = JSON.parse(element.orders);
                            element.date_time = moment__WEBPACK_IMPORTED_MODULE_4__(element.date_time).format('dddd, MMMM Do YYYY');
                            element.orders = yield element.orders.filter(x => x.store_id == this.storeId);
                            console.log(element.discount);
                            if (((x) => { try {
                                JSON.parse(x);
                                return true;
                            }
                            catch (e) {
                                return false;
                            } })(element.status)) {
                                const info = JSON.parse(element.status);
                                const selected = yield info.filter(x => x.id == this.storeId);
                                if (selected && selected.length) {
                                    if (selected[0].status == 'delivered') {
                                        yield element.orders.forEach(calc => {
                                            if (calc.variations && calc.variations !== '' && typeof calc.variations == 'string') {
                                                calc.variations = JSON.parse(calc.variations);
                                                console.log(calc['variant']);
                                                if (calc["variant"] == undefined) {
                                                    calc['variant'] = 0;
                                                }
                                            }
                                            if (calc && calc.discount == 0) {
                                                if (calc.size == 1 || calc.size == 1) {
                                                    if (calc.variations[0].calc[calc.variant].discount && calc.variations[0].items[calc.variant].discount !== 0) {
                                                        total = total + (parseFloat(calc.variations[0].items[calc.variant].discount) * calc.quantiy);
                                                    }
                                                    else {
                                                        total = total + (parseFloat(calc.variations[0].items[calc.variant].price) * calc.quantiy);
                                                    }
                                                }
                                                else {
                                                    total = total + (parseFloat(calc.original_price) * calc.quantiy);
                                                }
                                            }
                                            else {
                                                if (calc.size == 1 || calc.size == 1) {
                                                    if (calc.variations[0].items[calc.variant].discount && calc.variations[0].items[calc.variant].discount !== 0) {
                                                        total = total + (parseFloat(calc.variations[0].items[calc.variant].discount) * calc.quantiy);
                                                    }
                                                    else {
                                                        total = total + (parseFloat(calc.variations[0].items[calc.variant].price) * calc.quantiy);
                                                    }
                                                }
                                                else {
                                                    total = total + (parseFloat(calc.sell_price) * calc.quantiy);
                                                }
                                            }
                                        });
                                        this.storeOrder.push(element);
                                    }
                                }
                            }
                        }
                    }));
                    setTimeout(() => {
                        function percentage(num, per) {
                            return (num / 100) * per;
                        }
                        console.log(this.storeOrder);
                        console.log(total, this.storecommission);
                        const totalPrice = percentage(total, parseFloat(this.storecommission));
                        console.log('commistion====>>>>>', totalPrice.toFixed(2));
                        this.commisionAmount = totalPrice.toFixed(2);
                        this.totalAmount = total;
                        this.toPay = this.commisionAmount;
                    }, 1000);
                }
            }, error => {
                this.util.hide();
                console.log(error);
                this.apiCalled = true;
                this.util.error(this.util.translate('Something went wrong'));
            }).catch((error) => {
                this.util.hide();
                console.log(error);
                this.apiCalled = true;
                this.util.error(this.util.translate('Something went wrong'));
            });
        }
        else {
            console.log('not valid');
            this.util.error(this.util.translate('All Fields are required'));
            return false;
        }
    }
    getCommisions(total) {
        return ((parseFloat(total) * this.storecommission) / 100).toFixed(2);
    }
    donwloadPDF() {
    }
    today() {
        return moment__WEBPACK_IMPORTED_MODULE_4__().format('ll');
    }
    getDate(date) {
        return moment__WEBPACK_IMPORTED_MODULE_4__(date).format('ll');
    }
    getName() {
        return this.storeOrder[0].name + '_' + moment__WEBPACK_IMPORTED_MODULE_4__(this.from).format('DDMMYYYY') + '_' + moment__WEBPACK_IMPORTED_MODULE_4__(this.to).format('DDMMYYYY');
    }
};
StatsComponent.ctorParameters = () => [
    { type: _services_util_service__WEBPACK_IMPORTED_MODULE_6__["UtilService"] },
    { type: _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"] }
];
StatsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-stats',
        template: _raw_loader_stats_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_stats_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_services_util_service__WEBPACK_IMPORTED_MODULE_6__["UtilService"],
        _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]])
], StatsComponent);



/***/ }),

/***/ "iU+t":
/*!*********************************************!*\
  !*** ./src/app/pages/stats/stats.module.ts ***!
  \*********************************************/
/*! exports provided: StatsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StatsModule", function() { return StatsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "SVse");
/* harmony import */ var _stats_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stats-routing.module */ "sOGy");
/* harmony import */ var _stats_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stats.component */ "V1J6");
/* harmony import */ var ngx_print__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-print */ "LEg7");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-spinner */ "7g+E");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "s7LF");








let StatsModule = class StatsModule {
};
StatsModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [
            _stats_component__WEBPACK_IMPORTED_MODULE_4__["StatsComponent"]
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _stats_routing_module__WEBPACK_IMPORTED_MODULE_3__["StatsRoutingModule"],
            ngx_print__WEBPACK_IMPORTED_MODULE_5__["NgxPrintModule"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_6__["NgxSpinnerModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"]
        ]
    })
], StatsModule);



/***/ }),

/***/ "sOGy":
/*!*****************************************************!*\
  !*** ./src/app/pages/stats/stats-routing.module.ts ***!
  \*****************************************************/
/*! exports provided: StatsRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StatsRoutingModule", function() { return StatsRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "iInd");
/* harmony import */ var _stats_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stats.component */ "V1J6");




const routes = [
    {
        path: '',
        component: _stats_component__WEBPACK_IMPORTED_MODULE_3__["StatsComponent"]
    }
];
let StatsRoutingModule = class StatsRoutingModule {
};
StatsRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], StatsRoutingModule);



/***/ }),

/***/ "x4SB":
/*!**************************************************!*\
  !*** ./src/app/pages/stats/stats.component.scss ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("p {\n  margin: 0px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzdGF0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLHNCQUFBO0FBQUoiLCJmaWxlIjoic3RhdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbnAge1xuICAgIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7XG59XG4iXX0= */");

/***/ })

}]);
//# sourceMappingURL=pages-stats-stats-module-es2015.js.map