{"version":3,"sources":["webpack:///src/app/pages/stats/stats.component.html","webpack:///node_modules/ngx-print/fesm2015/ngx-print.js","webpack:///src/app/pages/stats/stats.component.ts","webpack:///src/app/pages/stats/stats.module.ts","webpack:///src/app/pages/stats/stats-routing.module.ts","webpack:///src/app/pages/stats/stats.component.scss"],"names":["NgxPrintDirective","_printStyle","useExistingCss","printDelay","_styleSheetFile","values","key","hasOwnProperty","push","JSON","stringify","replace","returnStyleValues","join","cssList","linkTagFn","cssFileName","indexOf","valueArr","split","val","tag","html","elements","document","getElementsByTagName","index","length","outerHTML","data","i","defaultValue","value","checked","defaultChecked","printContents","getElementById","printSectionId","innards","getFormData","txt","innerHTML","popupWin","styles","links","baseTag","getElementTag","getHtmlContents","window","open","write","printTitle","returnStyleSheetLinkTags","close","ɵfac","NgxPrintDirective_Factory","t","ɵdir","type","selectors","hostBindings","NgxPrintDirective_HostBindings","rf","ctx","NgxPrintDirective_click_HostBindingHandler","print","inputs","printStyle","styleSheetFile","propDecorators","args","ngDevMode","selector","NgxPrintModule","NgxPrintModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports","StatsComponent","util","api","stores","allOrders","storeOrder","totalAmount","commisionAmount","toPay","totalAmountsFromOrder","storeId","parseInt","localStorage","getItem","console","log","from","to","param","id","utcOffset","format","show","apiCalled","post_private","then","hide","status","storecommission","commission","total","forEach","element","x","parse","e","orders","date_time","filter","store_id","discount","info","selected","calc","variations","undefined","size","items","variant","parseFloat","quantiy","price","original_price","sell_price","setTimeout","percentage","num","per","totalPrice","toFixed","error","translate","date","name","template","StatsModule","routes","path","component","StatsRoutingModule","forChild"],"mappings":"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","file":"pages-stats-stats-module-es5.js","sourcesContent":["export default \"\\n<ngx-spinner></ngx-spinner>\\n<div class=\\\"animated fadeIn\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    {{util.translate('Stats')}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <h5>{{util.translate('Get Stats')}} </h5>\\n                                </div>\\n                                <div class=\\\"card-body reset-table p-t-0\\\">\\n                                    <div class=\\\"form-group row\\\">\\n\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <label>{{util.translate('From Date')}} </label>\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"from\\\" class=\\\"form-control\\\"\\n                                                [placeholder]=\\\"util.translate('From Date')\\\">\\n                                        </div>\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <label>{{util.translate('To Date')}} </label>\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"to\\\" class=\\\"form-control\\\"\\n                                                [placeholder]=\\\"util.translate('To Date')\\\">\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-12\\\">\\n                                            <button class=\\\"btn btn-danger btn-round\\\"\\n                                                (click)=\\\"getStats()\\\">{{util.translate('Get Stats')}}\\n                                            </button>\\n                                            <button style=\\\"margin-left: 20px;\\\" [useExistingCss]=\\\"true\\\"\\n                                                [printTitle]=\\\"storename\\\" printSectionId=\\\"print-section\\\" ngxPrint\\n                                                *ngIf=\\\"from && to && storeOrder?.length\\\" class=\\\"btn btn-primary\\\"><i\\n                                                    class=\\\"icofont icofont-printer\\\"></i>{{util.translate('Print')}}\\n                                            </button>\\n\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <h2 style=\\\"text-align: center;\\\" *ngIf=\\\"from && to && !storeOrder?.length && apiCalled\\\">\\n                        {{util.translate('No Orders Found')}}\\n                    </h2>\\n                    <div class=\\\"row\\\" id=\\\"print-section\\\" *ngIf=\\\"from && to && storeOrder?.length\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\" style=\\\"padding: 20px;\\\">\\n                                    <h3 style=\\\"text-align: center;color: #7ec6aa;\\\">{{util.general.name}}</h3>\\n                                    <p style=\\\"text-align: center;color: #ED7669;\\\">{{getDate(from)}} to {{getDate(to)}}\\n                                    </p>\\n                                    <p\\n                                        style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;\\\">\\n                                        {{util.general.name}}</p>\\n                                    <p style=\\\"text-align: right;font-weight: bold;margin: 0px !important;\\\">\\n                                        {{util.general.address}} <br> {{util.general.city}} {{util.general.state}}<br>\\n                                        {{util.general.country}} {{util.general.zip}}\\n                                    </p>\\n                                    <p style=\\\"text-align: right;font-weight: bold;margin: 0px !important;\\\">\\n                                        {{util.general.email}}</p>\\n                                    <p style=\\\"text-align: right;font-weight: bold;margin: 0px !important;\\\">\\n                                        {{util.general.mobile}}\\n                                    </p>\\n                                    <p style=\\\"text-align: left; font-weight: bold;margin: 0px;color: #aaafad;\\\">\\n                                        {{util.store.name}}\\n                                    </p>\\n                                    <p style=\\\"text-align: left; font-weight: bold;color: #7EC6AA;\\\">{{today()}}</p>\\n                                    <table class=\\\"table table-striped\\\">\\n                                        <thead>\\n                                            <tr class=\\\"text-uppercase\\\" style=\\\"color:#7ec6aa ;\\\">\\n                                                <th>{{util.translate('Id')}} </th>\\n                                                <th>{{util.translate('Ordered on')}} </th>\\n                                                <th>{{util.translate('Items')}} </th>\\n                                                <th>{{util.translate('Total')}} </th>\\n                                                <th>{{util.translate('Discount')}} </th>\\n                                                <th>{{util.translate('Grand Total')}} </th>\\n                                                <th>{{util.translate('Commission')}} </th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let item of storeOrder\\\" style=\\\"background-color: #F5F8FA;\\\">\\n                                                <td>#{{item.id}}</td>\\n                                                <td>{{item.date_time}}</td>\\n                                                <td>\\n                                                    <p *ngFor=\\\"let orders of item.orders;let i =index;\\\">\\n                                                        {{orders.name}} <span\\n                                                            *ngIf=\\\"item.orders.length -1 !== i\\\">,</span>\\n                                                    </p>\\n                                                </td>\\n\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{item.total}}\\n                                                    </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{item.total}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{item.discount}} </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{item.discount}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{item.grand_total}} </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{item.grand_total}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{getCommisions(item.total)}}\\n                                                    </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{getCommisions(item.total)}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <div class=\\\"row\\\" style=\\\"padding: 20px;\\\">\\n                                        <div class=\\\"col-sm-6\\\"></div>\\n                                        <div class=\\\"col-sm-4\\\">\\n                                            <p\\n                                                style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\\\">\\n                                                {{util.translate('Total')}} </p>\\n                                            <p\\n                                                style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\\\">\\n                                                {{util.translate('Commission')}}\\n                                            </p>\\n                                            <p\\n                                                style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\\\">\\n                                                {{util.translate('Amount Pay')}}\\n                                            </p>\\n                                        </div>\\n                                        <div class=\\\"col-sm-2\\\">\\n                                            <p style=\\\"color: black !important;margin: 0px !important;text-align: right;\\\">\\n\\n                                                <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}} {{totalAmount}}\\n                                                </span>\\n                                                <span *ngIf=\\\"util.cside ==='right'\\\">{{totalAmount}}\\n                                                    {{util.currecny}}</span>\\n                                            </p>\\n                                            <p style=\\\"color: black !important; margin: 0px !important;text-align: right;\\\">\\n\\n                                                <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}} {{commisionAmount}}\\n                                                </span>\\n                                                <span *ngIf=\\\"util.cside ==='right'\\\">{{commisionAmount}}\\n                                                    {{util.currecny}}</span>\\n                                            </p>\\n                                            <p style=\\\"color: black !important;margin: 0px !important;text-align: right;\\\">\\n                                                <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}} {{toPay}}</span>\\n                                                <span *ngIf=\\\"util.cside ==='right'\\\">{{toPay}} {{util.currecny}}</span>\\n                                                </p>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","import { Directive, HostListener, Input, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nclass NgxPrintDirective {\r\n    constructor() {\r\n        this._printStyle = [];\r\n        /**\r\n         *\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this.useExistingCss = false;\r\n        /**\r\n         * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this.printDelay = 0;\r\n        /**\r\n         *\r\n         *\r\n         * @return html for the given tag\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this._styleSheetFile = '';\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    set printStyle(values) {\r\n        for (let key in values) {\r\n            if (values.hasOwnProperty(key)) {\r\n                this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\r\n            }\r\n        }\r\n        this.returnStyleValues();\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?} the string that create the stylesheet which will be injected\r\n     * later within <style></style> tag.\r\n     *\r\n     * -join/replace to transform an array objects to css-styled string\r\n     *\r\n     */\r\n    returnStyleValues() {\r\n        return `<style> ${this._printStyle.join(' ').replace(/,/g, ';')} </style>`;\r\n    }\r\n    /**\r\n     * \\@memberof NgxPrintDirective\r\n     * @param {?} cssList\r\n     * @return {?}\r\n     */\r\n    set styleSheetFile(cssList) {\r\n        /** @type {?} */\r\n        let linkTagFn = (/**\r\n         * @param {?} cssFileName\r\n         * @return {?}\r\n         */\r\n        function (cssFileName) {\r\n            return `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\r\n        });\r\n        if (cssList.indexOf(',') !== -1) {\r\n            /** @type {?} */\r\n            const valueArr = cssList.split(',');\r\n            for (let val of valueArr) {\r\n                this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\r\n            }\r\n        }\r\n        else {\r\n            this._styleSheetFile = linkTagFn(cssList);\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?} string which contains the link tags containing the css which will\r\n     * be injected later within <head></head> tag.\r\n     *\r\n     */\r\n    returnStyleSheetLinkTags() {\r\n        return this._styleSheetFile;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    getElementTag(tag) {\r\n        /** @type {?} */\r\n        const html = [];\r\n        /** @type {?} */\r\n        const elements = document.getElementsByTagName(tag);\r\n        for (let index = 0; index < elements.length; index++) {\r\n            html.push(elements[index].outerHTML);\r\n        }\r\n        return html.join('\\r\\n');\r\n    }\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {?} data the html element collection to save defaults to\r\n     *\r\n     * @return {?}\r\n     */\r\n    getFormData(data) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            data[i].defaultValue = data[i].value;\r\n            if (data[i].checked) {\r\n                data[i].defaultChecked = true;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?} html section to be printed along with some associated inputs\r\n     *\r\n     */\r\n    getHtmlContents() {\r\n        /** @type {?} */\r\n        let printContents = document.getElementById(this.printSectionId);\r\n        /** @type {?} */\r\n        let innards = printContents.getElementsByTagName('input');\r\n        this.getFormData(innards);\r\n        /** @type {?} */\r\n        let txt = printContents.getElementsByTagName('textarea');\r\n        this.getFormData(txt);\r\n        return printContents.innerHTML;\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?}\r\n     */\r\n    print() {\r\n        /** @type {?} */\r\n        let printContents;\r\n        /** @type {?} */\r\n        let popupWin;\r\n        /** @type {?} */\r\n        let styles = '';\r\n        /** @type {?} */\r\n        let links = '';\r\n        /** @type {?} */\r\n        const baseTag = this.getElementTag('base');\r\n        if (this.useExistingCss) {\r\n            styles = this.getElementTag('style');\r\n            links = this.getElementTag('link');\r\n        }\r\n        printContents = this.getHtmlContents();\r\n        popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\r\n        popupWin.document.open();\r\n        popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\r\n          ${baseTag}\r\n          ${this.returnStyleValues()}\r\n          ${this.returnStyleSheetLinkTags()}\r\n          ${styles}\r\n          ${links}\r\n        </head>\r\n        <body>\r\n          ${printContents}\r\n          <script defer>\r\n            function triggerPrint(event) {\r\n              window.removeEventListener('load', triggerPrint, false);\r\n              setTimeout(function() {\r\n                closeWindow(window.print());\r\n              }, ${this.printDelay});\r\n            }\r\n            function closeWindow(){\r\n                window.close();\r\n            }\r\n            window.addEventListener('load', triggerPrint, false);\r\n          </script>\r\n        </body>\r\n      </html>`);\r\n        popupWin.document.close();\r\n    }\r\n}\nNgxPrintDirective.ɵfac = function NgxPrintDirective_Factory(t) { return new (t || NgxPrintDirective)(); };\nNgxPrintDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxPrintDirective, selectors: [[\"button\", \"ngxPrint\", \"\"]], hostBindings: function NgxPrintDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NgxPrintDirective_click_HostBindingHandler() { return ctx.print(); });\n    } }, inputs: { useExistingCss: \"useExistingCss\", printDelay: \"printDelay\", printStyle: \"printStyle\", styleSheetFile: \"styleSheetFile\", printSectionId: \"printSectionId\", printTitle: \"printTitle\" } });\r\nNgxPrintDirective.propDecorators = {\r\n    printSectionId: [{ type: Input }],\r\n    printTitle: [{ type: Input }],\r\n    useExistingCss: [{ type: Input }],\r\n    printDelay: [{ type: Input }],\r\n    printStyle: [{ type: Input }],\r\n    styleSheetFile: [{ type: Input }],\r\n    print: [{ type: HostListener, args: ['click',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPrintDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"button[ngxPrint]\"\n            }]\n    }], function () { return []; }, { useExistingCss: [{\n            type: Input\n        }], printDelay: [{\n            type: Input\n        }], printStyle: [{\n            type: Input\n        }], styleSheetFile: [{\n            type: Input\n        }], \n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @return {?}\n     */\n    print: [{\n            type: HostListener,\n            args: ['click']\n        }], printSectionId: [{\n            type: Input\n        }], printTitle: [{\n            type: Input\n        }] }); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxPrintModule {\r\n}\nNgxPrintModule.ɵfac = function NgxPrintModule_Factory(t) { return new (t || NgxPrintModule)(); };\nNgxPrintModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxPrintModule });\nNgxPrintModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPrintModule, { declarations: [NgxPrintDirective], exports: [NgxPrintDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPrintModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxPrintDirective],\n                imports: [],\n                exports: [NgxPrintDirective]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPrintDirective, NgxPrintModule };\n\n//# sourceMappingURL=ngx-print.js.map","\nimport { Component, OnInit } from '@angular/core';\nimport * as moment from 'moment';\nimport { ApiService } from '../../services/api.service';\nimport { UtilService } from '../../services/util.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  stores: any[] = [];\n  storeId: any;\n  storecommission: any;\n  from: any;\n  to: any;\n  allOrders: any[] = [];\n  storeOrder: any[] = [];\n  totalAmount: any = 0;\n  commisionAmount: any = 0;\n  toPay: any = 0;\n  apiCalled: boolean;\n  storename: any;\n\n  totalAmountsFromOrder: any = 0;\n  constructor(\n    public util: UtilService,\n    public api: ApiService\n  ) {\n    this.storeId = parseInt(localStorage.getItem('uid'));\n  }\n\n  ngOnInit(): void {\n  }\n\n  getStats() {\n    console.log('from', this.from);\n    console.log('to', this.to);\n    if (this.from && this.to) {\n\n      console.log('ok');\n      const param = {\n        id: localStorage.getItem('uid'),\n        from: moment(this.from, 'YYYY-MM-DD HH:mm A').utcOffset(\"+05:30\").format('YYYY-MM-DD HH:mm'),\n        to: moment(this.to, 'YYYY-MM-DD HH:mm A').utcOffset(\"+05:30\").format('YYYY-MM-DD 23:59'),\n      };\n      console.log(param);\n      this.util.show();\n      this.apiCalled = false;\n      this.storeOrder = [];\n      this.api.post_private('v1/orders/getStoreStatsDataWithDates', param).then((data: any) => {\n        this.apiCalled = true;\n        this.util.hide();\n        console.log(data);\n        if (data && data.status == 200 && data.data.length) {\n          this.storecommission = data.commission.commission;\n          console.log('commustion', this.storecommission);\n          let total = 0;\n          data.data.forEach(async (element) => {\n            if (((x) => { try { JSON.parse(x); return true; } catch (e) { return false } })(element.orders)) {\n              element.orders = JSON.parse(element.orders);\n              element.date_time = moment(element.date_time).format('dddd, MMMM Do YYYY');\n              element.orders = await element.orders.filter(x => x.store_id == this.storeId);\n              console.log(element.discount);\n              if (((x) => { try { JSON.parse(x); return true; } catch (e) { return false } })(element.status)) {\n                const info = JSON.parse(element.status);\n\n                const selected = await info.filter(x => x.id == this.storeId);\n                if (selected && selected.length) {\n                  if (selected[0].status == 'delivered') {\n                    await element.orders.forEach(calc => {\n                      if (calc.variations && calc.variations !== '' && typeof calc.variations == 'string') {\n                        calc.variations = JSON.parse(calc.variations);\n                        console.log(calc['variant']);\n                        if (calc[\"variant\"] == undefined) {\n                          calc['variant'] = 0;\n                        }\n                      }\n                      if (calc && calc.discount == 0) {\n                        if (calc.size == 1 || calc.size == 1) {\n                          if (calc.variations[0].items[calc.variant].discount && calc.variations[0].items[calc.variant].discount !== 0) {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].discount) * calc.quantiy);\n                          } else {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].price) * calc.quantiy);\n                          }\n                        } else {\n                          total = total + (parseFloat(calc.original_price) * calc.quantiy);\n                        }\n                      } else {\n                        if (calc.size == 1 || calc.size == 1) {\n                          if (calc.variations[0].items[calc.variant].discount && calc.variations[0].items[calc.variant].discount !== 0) {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].discount) * calc.quantiy);\n                          } else {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].price) * calc.quantiy);\n                          }\n                        } else {\n                          total = total + (parseFloat(calc.sell_price) * calc.quantiy);\n                        }\n                      }\n                    });\n                    this.storeOrder.push(element);\n                  }\n                }\n              }\n            }\n          });\n\n          setTimeout(() => {\n            function percentage(num, per) {\n              return (num / 100) * per;\n            }\n            console.log(this.storeOrder);\n            console.log(total, this.storecommission);\n            const totalPrice = percentage(total, parseFloat(this.storecommission));\n            console.log('commistion====>>>>>', totalPrice.toFixed(2));\n            this.commisionAmount = totalPrice.toFixed(2);\n            this.totalAmount = total;\n            this.toPay = this.commisionAmount;\n          }, 1000);\n\n        }\n      }, error => {\n        this.util.hide();\n        console.log(error);\n        this.apiCalled = true;\n        this.util.error(this.util.translate('Something went wrong'));\n      }).catch((error) => {\n        this.util.hide();\n        console.log(error);\n        this.apiCalled = true;\n        this.util.error(this.util.translate('Something went wrong'));\n      });\n    } else {\n      console.log('not valid');\n      this.util.error(this.util.translate('All Fields are required'));\n      return false;\n    }\n  }\n\n  getCommisions(total) {\n    return ((parseFloat(total) * this.storecommission) / 100).toFixed(2);\n  }\n\n  donwloadPDF() {\n\n  }\n  today() {\n    return moment().format('ll');\n  }\n  getDate(date) {\n    return moment(date).format('ll');\n  }\n  getName() {\n    return this.storeOrder[0].name + '_' + moment(this.from).format('DDMMYYYY') + '_' + moment(this.to).format('DDMMYYYY');\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StatsRoutingModule } from './stats-routing.module';\nimport { StatsComponent } from './stats.component';\nimport { NgxPrintModule } from 'ngx-print';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    StatsComponent\n  ],\n  imports: [\n    CommonModule,\n    StatsRoutingModule,\n    NgxPrintModule,\n    NgxSpinnerModule,\n    FormsModule\n  ]\n})\nexport class StatsModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StatsComponent } from './stats.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StatsRoutingModule { }\n","export default \"p {\\n  margin: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzdGF0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLHNCQUFBO0FBQUoiLCJmaWxlIjoic3RhdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbnAge1xuICAgIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7XG59XG4iXX0= */\";"]}