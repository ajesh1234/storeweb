(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-products-details-products-details-module"],{

/***/ "1nDc":
/*!************************************************************************!*\
  !*** ./src/app/pages/products-details/products-details.component.scss ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9kdWN0cy1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIn0= */");

/***/ }),

/***/ "9Zvn":
/*!**********************************************************************!*\
  !*** ./src/app/pages/products-details/products-details.component.ts ***!
  \**********************************************************************/
/*! exports provided: ProductsDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductsDetailsComponent", function() { return ProductsDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _raw_loader_products_details_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raw-loader!./products-details.component.html */ "dWfz");
/* harmony import */ var _products_details_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./products-details.component.scss */ "1nDc");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "SVse");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "iInd");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ "wd/R");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-bootstrap/modal */ "LqlI");
/* harmony import */ var _services_api_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/api.service */ "H+bZ");
/* harmony import */ var _services_util_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../services/util.service */ "2Rin");










let ProductsDetailsComponent = class ProductsDetailsComponent {
    constructor(util, api, route, location) {
        this.util = util;
        this.api = api;
        this.route = route;
        this.location = location;
        this.cateId = '';
        this.cateName = '';
        this.subId = '';
        this.subName = '';
        this.name = '';
        this.is_single = 0;
        this.status = 1;
        this.coverImage = '';
        this.veg = 0;
        this.have_gram = 0;
        this.gram = 0;
        this.have_kg = 0;
        this.kg = 0;
        this.have_pcs = 0;
        this.pcs = 0;
        this.have_liter = 0;
        this.liter = 0;
        this.have_ml = 0;
        this.ml = 0;
        this.in_stoke = 1;
        this.in_offer = 0;
        this.key_features = '';
        this.disclaimer = '';
        this.variations = [];
        this.size = 0;
        this.category = [];
        this.dummyCates = [];
        this.cateString = '';
        this.subCates = [] = [];
        this.dummySubCates = [];
        this.subString = '';
        this.variant_title = '';
        this.route.queryParams.subscribe((data) => {
            console.log(data);
            if (data && data.id) {
                this.id = data.id;
                this.isNew = false;
                this.getProduct();
            }
            else {
                this.isNew = true;
                this.getCates();
            }
        });
    }
    getCates() {
        this.api.get_private('v1/categories/getActiveItem').then((cates) => {
            console.log(cates);
            if (cates && cates.status == 200 && cates.data && cates.data.length) {
                console.log(cates.data);
                this.category = cates.data;
                this.dummyCates = cates.data;
            }
            else {
                this.util.error(this.util.translate('No category found'));
            }
        }, error => {
            this.util.error(this.util.translate('Something went wrong'));
            console.log(error);
        });
    }
    getProduct() {
        const param = {
            id: this.id
        };
        this.util.show();
        this.api.post_private('v1/products/getByIdStore', param).then((data) => {
            console.log(data);
            this.util.hide();
            if (data && data.status && data.status == 200 && data.data) {
                const info = data.data;
                console.log('product ->', info);
                this.cateId = info.cate_id;
                this.subId = info.sub_cate_id;
                this.name = info.name;
                this.description = info.descriptions;
                this.coverImage = info.cover;
                this.key_features = info.key_features;
                this.disclaimer = info.disclaimer;
                this.discount = info.discount;
                this.exp_date = info.exp_date;
                this.gram = info.gram;
                this.have_gram = info.have_gram;
                this.kg = info.kg;
                this.have_kg = info.have_kg;
                this.liter = info.liter;
                this.have_liter = info.have_liter;
                this.ml = info.ml;
                this.have_ml = info.have_ml;
                this.pcs = info.pcs;
                this.have_pcs = info.have_pcs;
                this.in_offer = info.in_offer;
                this.in_stoke = info.in_stoke;
                this.is_single = info.is_single;
                this.veg = info.kind;
                this.realPrice = parseFloat(info.original_price);
                this.sellPrice = parseFloat(info.sell_price);
                this.status = info.status;
                this.size = info && info.size && info.size == 1 ? 1 : 0;
                if (info && info.variations && info.variations != '') {
                    if (((x) => { try {
                        JSON.parse(x);
                        return true;
                    }
                    catch (e) {
                        return false;
                    } })(info.variations)) {
                        this.variations = JSON.parse(info.variations);
                    }
                }
                if (info.images) {
                    const images = JSON.parse(info.images);
                    console.log('images====>>>', images);
                    if (images[0]) {
                        this.image1 = images[0];
                    }
                    if (images[1]) {
                        this.image2 = images[1];
                    }
                    if (images[2]) {
                        this.image3 = images[2];
                    }
                    if (images[3]) {
                        this.image4 = images[3];
                    }
                    if (images[4]) {
                        this.image5 = images[4];
                    }
                    if (images[5]) {
                        this.image6 = images[5];
                    }
                }
                this.api.get_private('v1/categories/getActiveItem').then((cates) => {
                    console.log(cates);
                    if (cates && cates.status == 200 && cates.data && cates.data.length) {
                        console.log(cates.data);
                        this.category = cates.data;
                        this.dummyCates = cates.data;
                        const name = cates.data.filter(x => x.id == this.cateId);
                        console.log('cate name=-====>>>', name);
                        this.cateName = name[0].name;
                    }
                    else {
                        this.util.error(this.util.translate('No category found'));
                    }
                }, error => {
                    this.util.error(this.util.translate('Something went wrong'));
                    console.log(error);
                });
                const subCate = {
                    id: info.cate_id
                };
                this.api.post_private('v1/subcate/getByCId', subCate).then((sub) => {
                    console.log(sub);
                    if (sub && sub.status == 200 && sub.data && sub.data.length) {
                        // this.category = sub.data;
                        console.log(sub);
                        const name = sub.data.filter(x => x.id == this.subId);
                        console.log('cate name=-====>>>', name);
                        this.subName = name[0].name;
                    }
                    else {
                        this.util.error(this.util.translate('No category found'));
                    }
                }, error => {
                    this.util.error(this.util.translate('Something went wrong'));
                });
            }
        }, error => {
            this.util.hide();
            this.util.error(this.util.translate('Something went wrong'));
            console.log(error);
        }).catch(error => {
            this.util.hide();
            console.log(error);
            this.util.error(this.util.translate('Something went wrong'));
        });
    }
    ngOnInit() {
    }
    onDicount(value) {
        value = parseFloat(value);
        console.log(value);
        if (this.realPrice && value <= 99) {
            this.percentage(this.discount, this.realPrice);
        }
        else {
            this.discount = 0;
            this.percentage(this.discount, this.realPrice);
        }
    }
    onRealPrice(value) {
        value = parseFloat(value);
        console.log(value);
        if (this.sellPrice && value > 1) {
            this.percentage(this.discount, this.realPrice);
        }
    }
    percentage(percent, total) {
        this.sellPrice = 0;
        const price = ((percent / 100) * total);
        this.sellPrice = this.realPrice - price;
    }
    openCate() {
        try {
            this.content.show();
        }
        catch (error) {
            console.log(error);
        }
    }
    openSub() {
        if (this.cateId && this.cateName) {
            console.log(status);
            const param = {
                id: this.cateId
            };
            this.util.show();
            this.api.post_private('v1/subcate/getByCId', param).then((data) => {
                this.util.hide();
                console.log(data);
                if (data && data.status == 200 && data.data && data.data.length) {
                    this.subCates = data.data;
                    this.dummySubCates = data.data;
                }
                else {
                    this.util.error(this.util.translate('No category found'));
                }
            }, error => {
                this.util.hide();
                this.util.error(this.util.translate('Something went wrong'));
                console.log(error);
            });
            try {
                this.contentSub.show();
            }
            catch (error) {
                console.log(error);
            }
        }
        else {
            this.util.error('Please select category first');
        }
    }
    close() {
        console.log('category');
        if (this.cateId) {
            const name = this.category.filter(x => x.id == this.cateId);
            console.log('name', name[0].name);
            this.cateName = name[0].name;
            this.subId = '';
            this.subName = '';
            this.subCates = [];
            this.dummySubCates = [];
        }
        this.content.hide();
        // this.modalService.dismissAll();
    }
    close2() {
        console.log('sub categoryt');
        if (this.subId) {
            const name = this.subCates.filter(x => x.id == this.subId);
            console.log('name', name[0].name);
            this.subName = name[0].name;
        }
        this.contentSub.hide();
        // this.modalService.dismissAll();
    }
    searchCates(str) {
        console.log(str);
        this.category = this.dummyCates.filter((ele) => {
            return ele.name.toLowerCase().includes(str.toLowerCase());
        });
    }
    searchSubCate(str) {
        console.log(str);
        this.subCates = this.dummySubCates.filter((ele) => {
            return ele.name.toLowerCase().includes(str.toLowerCase());
        });
    }
    changeSize(event) {
        console.log(event);
        this.size = event;
        console.log(this.size);
        if (this.size == 1) {
            const items = this.variations.filter(x => x.title == 'size');
            console.log('length', items);
            if (!items.length) {
                const item = {
                    title: 'size',
                    type: 'radio',
                    items: []
                };
                this.variations.push(item);
                console.log(this.variations);
            }
        }
        else {
            this.variations = this.variations.filter(x => x.title != 'size');
            console.log(this.variations);
        }
    }
    addItem(index) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            console.log(this.variations[index]);
            this.sub = false;
            this.variatIndex = index;
            try {
                this.contentVarient.show();
            }
            catch (error) {
                console.log(error);
            }
        });
    }
    delete(item) {
        console.log(item);
        if (item.title == 'size') {
            this.size = false;
        }
        this.variations = this.variations.filter(x => x.title != item.title);
    }
    close3() {
        if (this.sub == false) {
            if (this.variant_title && this.variant_price && this.variant_price != 0 && this.variant_price > 0) {
                const item = {
                    title: this.variant_title,
                    price: parseFloat(this.variant_price),
                    discount: this.variant_discount && this.variant_discount ? parseFloat(this.variant_discount) : 0
                };
                this.variations[this.variatIndex].items.push(item);
                this.contentVarient.hide();
                this.variant_title = '';
                this.variant_price = 0;
                this.variant_discount = 0;
                this.variatIndex = '';
            }
            else {
                this.util.error(this.util.translate('Please add title and price'));
            }
        }
        else {
            if (this.variant_title && this.variant_price && this.variant_price != 0 && this.variant_price > 0) {
                this.variations[this.variatIndex].items[this.subIndex].title = this.variant_title;
                this.variations[this.variatIndex].items[this.subIndex].price = parseFloat(this.variant_price),
                    this.variations[this.variatIndex].items[this.subIndex].discount =
                        this.variant_discount && this.variant_discount ? parseFloat(this.variant_discount) : 0;
                this.contentVarient.hide();
            }
            else {
                this.util.error(this.util.translate('Please add title and price'));
            }
        }
    }
    deleteSub(index, item) {
        console.log(index);
        console.log(item);
        const selected = this.variations[index].items;
        console.log('selected', selected);
        const data = selected.filter(x => x.title != item.title);
        console.log(data);
        this.variations[index].items = data;
        console.log('done', this.variations);
    }
    editSub(index, items, subIndex) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            this.sub = true;
            this.variatIndex = index;
            this.subIndex = subIndex;
            this.variant_title = this.variations[index].title;
            this.variant_price = this.variations[index].items[subIndex].price;
            this.variant_discount = this.variations[index].items[subIndex].discount;
            try {
                this.contentVarient.show();
            }
            catch (error) {
                console.log(error);
            }
        });
    }
    others(files, num) {
        if (files.length == 0) {
            return;
        }
        const mimeType = files[0].type;
        if (mimeType.match(/image\/*/) == null) {
            return;
        }
        if (files) {
            console.log('ok');
            this.util.show();
            this.api.uploadFile(files).subscribe((data) => {
                console.log('==>>', data);
                this.util.hide();
                if (data && data.status == 200 && data.data) {
                    if (num == 1 || num == 1) {
                        this.image1 = data.data.image_name;
                    }
                    if (num == 2 || num == '2') {
                        this.image2 = data.data.image_name;
                    }
                    if (num == 3 || num == '3') {
                        this.image3 = data.data.image_name;
                    }
                    if (num == 4 || num == '4') {
                        this.image4 = data.data.image_name;
                    }
                    if (num == 5 || num == '5') {
                        this.image5 = data.data.image_name;
                    }
                    if (num == 6 || num == '6') {
                        this.image6 = data.data.image_name;
                    }
                }
            }, err => {
                console.log(err);
                this.util.hide();
            });
        }
        else {
            console.log('no');
        }
    }
    preview_banner(files) {
        console.log('fle', files);
        if (files.length == 0) {
            return;
        }
        const mimeType = files[0].type;
        if (mimeType.match(/image\/*/) == null) {
            return;
        }
        if (files) {
            console.log('ok');
            this.util.show();
            this.api.uploadFile(files).subscribe((data) => {
                console.log('==>>', data);
                this.util.hide();
                if (data && data.status == 200 && data.data) {
                    this.coverImage = data.data.image_name;
                }
            }, err => {
                console.log(err);
                this.util.hide();
            });
        }
        else {
            console.log('no');
        }
    }
    submit() {
        console.log('size-->>', this.size);
        console.log('submited', this.veg);
        if (!this.cateId || this.cateId == '') {
            this.util.error(this.util.translate('Please select category'));
            return false;
        }
        if (!this.subId || this.subId == '') {
            this.util.error(this.util.translate('Please select sub category'));
            return false;
        }
        if (!this.realPrice || this.realPrice == '') {
            this.util.error(this.util.translate('Please enter product price'));
            return false;
        }
        if (!this.description || this.description == '') {
            this.util.error(this.util.translate('Please enter product description'));
            return false;
        }
        if (!this.name || this.name == '') {
            this.util.error(this.util.translate('Please enter product name'));
            return false;
        }
        if (!this.coverImage || this.coverImage == '') {
            this.util.error(this.util.translate('Please add product image'));
            return false;
        }
        if (!this.exp_date || this.exp_date == '') {
            this.util.error(this.util.translate('Please product expire date'));
            return false;
        }
        if (this.isNew) {
            console.log('new');
            this.create();
        }
        else {
            console.log('update');
            this.update();
        }
    }
    update() {
        const image = [
            this.image1 ? this.image1 : '',
            this.image2 ? this.image2 : '',
            this.image3 ? this.image3 : '',
            this.image4 ? this.image4 : '',
            this.image5 ? this.image5 : '',
            this.image6 ? this.image6 : ''
        ];
        const param = {
            id: this.id,
            store_id: localStorage.getItem('uid'),
            cover: this.coverImage,
            name: this.name,
            images: JSON.stringify(image),
            original_price: this.realPrice,
            sell_price: this.sellPrice ? this.sellPrice : 0,
            discount: this.discount ? this.discount : 0,
            kind: this.veg,
            cate_id: this.cateId,
            sub_cate_id: this.subId,
            have_gram: this.have_gram,
            gram: this.have_gram == 1 ? this.gram : 0,
            have_kg: this.have_kg,
            kg: this.have_kg == 1 ? this.kg : 0,
            have_pcs: this.have_pcs,
            pcs: this.have_pcs == 1 ? this.pcs : 0,
            have_liter: this.have_liter,
            liter: this.have_liter == 1 ? this.liter : 0,
            have_ml: this.have_ml,
            ml: this.have_ml == 1 ? this.ml : 0,
            descriptions: this.description,
            exp_date: moment__WEBPACK_IMPORTED_MODULE_6__(this.exp_date).format('YYYY-MM-DD'),
            type_of: 1,
            in_stoke: this.in_stoke,
            status: this.status,
            in_offer: this.in_offer,
            key_features: this.key_features,
            disclaimer: this.disclaimer,
            is_single: this.is_single,
            size: this.size,
            variations: JSON.stringify(this.variations)
        };
        console.log('*****', param);
        this.util.show();
        this.api.post_private('v1/products/updateProducts', param).then((data) => {
            console.log(data);
            this.util.hide();
            if (data && data.status == 200) {
                this.location.back();
            }
            else {
                this.util.error(this.util.translate('Something went wrong'));
            }
        }, error => {
            this.util.hide();
            this.util.error(this.util.translate('Something went wrong'));
            console.log('error', error);
        });
    }
    create() {
        const image = [
            this.image1 ? this.image1 : '',
            this.image2 ? this.image2 : '',
            this.image3 ? this.image3 : '',
            this.image4 ? this.image4 : '',
            this.image5 ? this.image5 : '',
            this.image6 ? this.image6 : ''
        ];
        const param = {
            store_id: localStorage.getItem('uid'),
            cover: this.coverImage,
            name: this.name,
            images: JSON.stringify(image),
            original_price: this.realPrice,
            sell_price: this.sellPrice ? this.sellPrice : 0,
            discount: this.discount ? this.discount : 0,
            kind: this.veg,
            cate_id: this.cateId,
            sub_cate_id: this.subId,
            have_gram: this.have_gram,
            gram: this.have_gram == 1 ? this.gram : 0,
            have_kg: this.have_kg,
            kg: this.have_kg == 1 ? this.kg : 0,
            have_pcs: this.have_pcs,
            pcs: this.have_pcs == 1 ? this.pcs : 0,
            have_liter: this.have_liter,
            liter: this.have_liter == 1 ? this.liter : 0,
            have_ml: this.have_ml,
            ml: this.have_ml == 1 ? this.ml : 0,
            descriptions: this.description,
            exp_date: moment__WEBPACK_IMPORTED_MODULE_6__(this.exp_date).format('YYYY-MM-DD'),
            type_of: 1,
            in_stoke: this.in_stoke,
            status: this.status,
            in_offer: this.in_offer,
            key_features: this.key_features,
            disclaimer: this.disclaimer,
            is_single: this.is_single,
            in_home: 0,
            rating: 0,
            total_rating: 0,
            size: this.size,
            variations: JSON.stringify(this.variations)
        };
        console.log('*****', param);
        this.util.show();
        this.api.post_private('v1/products/saveProduct', param).then((data) => {
            console.log(data);
            this.util.hide();
            if (data && data.status == 200) {
                this.location.back();
            }
            else {
                this.util.error(this.util.translate('Something went wrong'));
            }
        }, error => {
            this.util.hide();
            this.util.error(this.util.translate('Something went wrong'));
            console.log('error', error);
        });
    }
};
ProductsDetailsComponent.ctorParameters = () => [
    { type: _services_util_service__WEBPACK_IMPORTED_MODULE_9__["UtilService"] },
    { type: _services_api_service__WEBPACK_IMPORTED_MODULE_8__["ApiService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["Location"] }
];
ProductsDetailsComponent.propDecorators = {
    content: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: ['content',] }],
    contentSub: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: ['contentSub',] }],
    contentVarient: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"], args: ['contentVarient',] }]
};
ProductsDetailsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-products-details',
        template: _raw_loader_products_details_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_products_details_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
    }),
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_services_util_service__WEBPACK_IMPORTED_MODULE_9__["UtilService"],
        _services_api_service__WEBPACK_IMPORTED_MODULE_8__["ApiService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
        _angular_common__WEBPACK_IMPORTED_MODULE_3__["Location"]])
], ProductsDetailsComponent);



/***/ }),

/***/ "QWSi":
/*!***************************************************************************!*\
  !*** ./src/app/pages/products-details/products-details-routing.module.ts ***!
  \***************************************************************************/
/*! exports provided: ProductsDetailsRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductsDetailsRoutingModule", function() { return ProductsDetailsRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "iInd");
/* harmony import */ var _products_details_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./products-details.component */ "9Zvn");




const routes = [
    {
        path: '',
        component: _products_details_component__WEBPACK_IMPORTED_MODULE_3__["ProductsDetailsComponent"]
    }
];
let ProductsDetailsRoutingModule = class ProductsDetailsRoutingModule {
};
ProductsDetailsRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], ProductsDetailsRoutingModule);



/***/ }),

/***/ "Yw9w":
/*!*******************************************************************!*\
  !*** ./src/app/pages/products-details/products-details.module.ts ***!
  \*******************************************************************/
/*! exports provided: ProductsDetailsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductsDetailsModule", function() { return ProductsDetailsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "mrSG");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "8Y7J");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "SVse");
/* harmony import */ var _products_details_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./products-details-routing.module */ "QWSi");
/* harmony import */ var _products_details_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./products-details.component */ "9Zvn");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "7g+E");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "s7LF");
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-bootstrap/modal */ "LqlI");








let ProductsDetailsModule = class ProductsDetailsModule {
};
ProductsDetailsModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [
            _products_details_component__WEBPACK_IMPORTED_MODULE_4__["ProductsDetailsComponent"]
        ],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _products_details_routing_module__WEBPACK_IMPORTED_MODULE_3__["ProductsDetailsRoutingModule"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormsModule"],
            ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_7__["ModalModule"].forRoot()
        ]
    })
], ProductsDetailsModule);



/***/ }),

/***/ "dWfz":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/products-details/products-details.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n<ngx-spinner></ngx-spinner>\n<div class=\"animated fadeIn\">\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    {{util.translate('Products Details')}}\n                </div>\n                <div class=\"card-body reset-table p-t-0\">\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-6\" (click)=\"openCate()\">\n                            <label>{{util.translate('Select Category')}} </label>\n                            <input style=\"background: transparent !important;\" type=\"text\" disabled=\"true\"\n                                [(ngModel)]=\"cateName\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Select Category')\">\n                        </div>\n                        <div class=\"col-sm-6\" (click)=\"openSub()\">\n                            <label>{{util.translate('Select Sub Category')}} </label>\n                            <input style=\"background: transparent !important;\" type=\"text\" disabled=\"true\"\n                                [(ngModel)]=\"subName\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Select Sub Category')\">\n                        </div>\n\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Name')}} </label>\n                            <input type=\"text\" [(ngModel)]=\"name\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Name')\">\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <label> {{util.translate('Real price')}} </label>\n                            <input type=\"text\" [(ngModel)]=\"realPrice\" (ngModelChange)=\"onRealPrice($event)\"\n                                class=\"form-control\" [placeholder]=\"util.translate('Real price')\">\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Sell price')}} </label>\n                            <input type=\"text\" [(ngModel)]=\"sellPrice\" disabled=\"true\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Sell price')\">\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Discount %')}} </label>\n                            <input type=\"text\" [(ngModel)]=\"discount\" (ngModelChange)=\"onDicount($event)\"\n                                class=\"form-control\" [placeholder]=\"util.translate('Discount %')\">\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Exp Date')}} </label>\n                            <input type=\"date\" [(ngModel)]=\"exp_date\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Exp Date')\">\n                        </div>\n\n                        <div class=\"col-sm-6\">\n                            <label> {{util.translate('Status')}}</label>\n                            <select name=\"select\" [(ngModel)]=\"status\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Available')}} </option>\n                                <option [value]='0'>{{util.translate('Hide')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('In Stock')}} </label>\n                            <select name=\"select\" [(ngModel)]=\"in_stoke\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('In Stock')}} </option>\n                                <option [value]='0'>{{util.translate('Out Of Stock')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Kind')}} </label>\n                            <select name=\"select\" [(ngModel)]=\"veg\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Veg')}} </option>\n                                <option [value]='0'>{{util.translate('Non Veg')}} </option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Have Gram')}} </label>\n                            <select name=\"select\" [(ngModel)]=\"have_gram\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Yes')}} </option>\n                                <option [value]='0'> {{util.translate('No')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\" *ngIf=\"have_gram  ==='1'\">\n                            <label>{{util.translate('Gram')}} </label>\n                            <input type=\"number\" [(ngModel)]=\"gram\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Gram')\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Have KG')}} </label>\n                            <select name=\"select\" [(ngModel)]=\"have_kg\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Yes')}} </option>\n                                <option [value]='0'>{{util.translate('No')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\" *ngIf=\"have_kg  ==='1'\">\n                            <label>{{util.translate('KG')}} </label>\n                            <input type=\"number\" [(ngModel)]=\"kg\" class=\"form-control\"\n                                [placeholder]=\"util.translate('KG')\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Have Liter')}} </label>\n                            <select name=\"select\" [(ngModel)]=\"have_liter\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Yes')}} </option>\n                                <option [value]='0'>{{util.translate('No')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\" *ngIf=\"have_liter  ==='1'\">\n                            <label>{{util.translate('Liter')}} </label>\n                            <input type=\"number\" [(ngModel)]=\"liter\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Liter')\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Have ML')}} </label>\n                            <select name=\"select\" [(ngModel)]=\"have_ml\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Yes')}} </option>\n                                <option [value]='0'>{{util.translate('No')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\" *ngIf=\"have_ml  ==='1'\">\n                            <label>{{util.translate('ML')}} </label>\n                            <input type=\"number\" [(ngModel)]=\"ml\" class=\"form-control\"\n                                [placeholder]=\"util.translate('ML')\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Have PCs')}} </label>\n                            <select name=\"select\" [(ngModel)]=\"have_pcs\" class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Yes')}} </option>\n                                <option [value]='0'>{{util.translate('No')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\" *ngIf=\"have_pcs ==='1'\">\n                            <label>{{util.translate('PCs')}} </label>\n                            <input type=\"number\" [(ngModel)]=\"pcs\" class=\"form-control\"\n                                [placeholder]=\"util.translate('PCs')\">\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-6\">\n                            <label>{{util.translate('Size')}} </label>\n                            <select name=\"select\" (ngModelChange)=\"changeSize($event)\" [(ngModel)]=\"size\"\n                                class=\"form-control\">\n                                <option [value]='1'>{{util.translate('Have Variations')}} </option>\n                                <option [value]='0'>{{util.translate('No Variations')}} </option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div *ngFor=\"let item of variations;let i = index;\">\n                                <div\n                                    style=\"font-size: 15px; display: flex; flex-direction: row; align-items: center; justify-content: flex-start;font-weight: bold;\">\n                                    <label style=\"margin: 0px !important;font-weight: bold;\">{{item.title}}</label>\n                                    <i class=\"fa fa-plus-circle fa-lg\" style=\"font-weight: bold;margin: 0px 10px;\"\n                                        (click)=\"addItem(i)\"></i>\n                                    <i class=\"fa fa-trash fa-lg\" style=\"font-weight: bold;margin: 0px 10px;\"\n                                        (click)=\"delete(item)\"></i>\n                                </div>\n                                <div *ngFor=\"let sub of item.items;let j = index\"\n                                    style=\"font-size: 15px; display: flex; flex-direction: row; align-items: center; justify-content: flex-start;font-weight: bold;\">\n                                    <div\n                                        style=\"font-size: 15px; display: flex; flex-direction: row; align-items: center; justify-content: flex-start;font-weight: bold;\">\n                                        {{sub.title}}\n                                        <p *ngIf=\"sub.discount === 0 || sub.discount ==='0'\"\n                                            style=\"margin: 0px !important;\">\n                                            <span>\n                                                <span *ngIf=\"util.cside =='left'\">\n                                                    {{util.currecny}} {{sub.price}}\n                                                </span>\n                                                <span *ngIf=\"util.cside =='right'\">\n                                                    {{sub.price}} {{util.currecny}}\n                                                </span>\n                                            </span>\n                                        </p>\n                                        <p class=\"price_lbl\" style=\"margin: 0px !important;\"\n                                            *ngIf=\"sub.discount !== 0 && sub.discount !=='0'\">\n                                            <span style=\"text-decoration:line-through;\">\n                                                <span *ngIf=\"util.cside =='left'\">\n                                                    {{util.currecny}} {{sub.price}}\n                                                </span>\n                                                <span *ngIf=\"util.cside =='right'\">\n                                                    {{sub.price}} {{util.currecny}}\n                                                </span>\n                                            </span>\n                                            <span class=\"sell\">\n                                                <span *ngIf=\"util.cside =='left'\">\n                                                    {{util.currecny}} {{sub.discount}}\n                                                </span>\n                                                <span *ngIf=\"util.cside =='right'\">\n                                                    {{sub.discount}} {{util.currecny}}\n                                                </span>\n                                            </span>\n                                        </p>\n                                    </div>\n\n                                    <i class=\"fa fa-edit fa-lg\" style=\"font-weight: bold;margin: 0px 10px;\"\n                                        (click)=\"editSub(i,sub,j)\"></i>\n                                    <i class=\"fa fa-trash fa-lg\" style=\"font-weight: bold;margin: 0px 10px;\"\n                                        (click)=\"deleteSub(i,sub)\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-12\">\n                            <label>{{util.translate('Descriptions')}} </label>\n                            <textarea rows=\"5\" cols=\"5\" [(ngModel)]=\"description\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Descriptions')\"></textarea>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-12\">\n                            <label>{{util.translate('Key feature')}} </label>\n                            <textarea rows=\"5\" cols=\"5\" [(ngModel)]=\"key_features\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Key feature')\"></textarea>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-12\">\n                            <label>{{util.translate('Disclaimer')}} </label>\n                            <textarea rows=\"5\" cols=\"5\" [(ngModel)]=\"disclaimer\" class=\"form-control\"\n                                [placeholder]=\"util.translate('Disclaimer')\"></textarea>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group row\">\n\n                        <label class=\"col-sm-4 col-form-label\">{{util.translate('Upload cover image here')}} </label>\n                        <div class=\"col-sm-4\">\n                            <input (change)=\"preview_banner($event.target.files)\" type=\"file\" class=\"form-control\"\n                                accept=\"image/*\">\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <img [src]=\"api.imageUrl+ coverImage\" alt=\"\"\n                                style=\"height: 100px;width: 100px;float: right;\"\n                                onError=\"this.src='assets/imgs/user.png'\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n\n                        <label class=\"col-sm-4 col-form-label\">{{util.translate('Upload image 1')}} </label>\n                        <div class=\"col-sm-4\">\n                            <input (change)=\"others($event.target.files,'1')\" type=\"file\" class=\"form-control\"\n                                accept=\"image/*\">\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <img [src]=\"api.imageUrl+ image1\" alt=\"\" style=\"height: 100px;width: 100px;float: right;\"\n                                onError=\"this.src='assets/imgs/user.png'\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n\n                        <label class=\"col-sm-4 col-form-label\">{{util.translate('Upload image 2')}} </label>\n                        <div class=\"col-sm-4\">\n                            <input (change)=\"others($event.target.files,'2')\" type=\"file\" class=\"form-control\"\n                                accept=\"image/*\">\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <img [src]=\"api.imageUrl+ image2\" alt=\"\" style=\"height: 100px;width: 100px;float: right;\"\n                                onError=\"this.src='assets/imgs/user.png'\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n\n                        <label class=\"col-sm-4 col-form-label\">{{util.translate('Upload image 3')}} </label>\n                        <div class=\"col-sm-4\">\n                            <input (change)=\"others($event.target.files,'3')\" type=\"file\" class=\"form-control\"\n                                accept=\"image/*\">\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <img [src]=\"api.imageUrl+ image3\" alt=\"\" style=\"height: 100px;width: 100px;float: right;\"\n                                onError=\"this.src='assets/imgs/user.png'\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n\n                        <label class=\"col-sm-4 col-form-label\">{{util.translate('Upload image 4')}} </label>\n                        <div class=\"col-sm-4\">\n                            <input (change)=\"others($event.target.files,'4')\" type=\"file\" class=\"form-control\"\n                                accept=\"image/*\">\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <img [src]=\"api.imageUrl+ image4\" alt=\"\" style=\"height: 100px;width: 100px;float: right;\"\n                                onError=\"this.src='assets/imgs/user.png'\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n\n                        <label class=\"col-sm-4 col-form-label\">{{util.translate('Upload image 5')}} </label>\n                        <div class=\"col-sm-4\">\n                            <input (change)=\"others($event.target.files,'5')\" type=\"file\" class=\"form-control\"\n                                accept=\"image/*\">\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <img [src]=\"api.imageUrl+ image5\" alt=\"\" style=\"height: 100px;width: 100px;float: right;\"\n                                onError=\"this.src='assets/imgs/user.png'\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n\n                        <label class=\"col-sm-4 col-form-label\">{{util.translate('Upload image 6')}} </label>\n                        <div class=\"col-sm-4\">\n                            <input (change)=\"others($event.target.files,'6')\" type=\"file\" class=\"form-control\"\n                                accept=\"image/*\">\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <img [src]=\"api.imageUrl+ image6\" alt=\"\" style=\"height: 100px;width: 100px;float: right;\"\n                                onError=\"this.src='assets/imgs/user.png'\">\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group row\">\n                        <button type=\"button\" (click)=\"submit()\"\n                            class=\"btn btn-primary btn-md btn-block waves-effect text-center\">{{util.translate('Submit')}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div bsModal #content=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">{{util.translate('Select Category')}} </h5>\n                <button type=\"button\" class=\"close\" (click)=\"content.hide()\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body long_content\">\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <label>{{util.translate('Select Category')}} </label>\n                        <input style=\"background: transparent !important;\" [(ngModel)]=\"cateString\"\n                            (ngModelChange)=\"searchCates($event)\" type=\"text\" class=\"form-control\"\n                            [placeholder]=\"util.translate('Search Category')\">\n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <div *ngFor=\"let item of category\" (click)=\"cateId = item.id\"\n                            style=\"display: flex; flex-direction: row; align-items: center; justify-content: space-between;margin-bottom: 5px; border-bottom: 1px solid lightgray; padding-bottom: 5px;\">\n                            <p style=\"margin: 0px;\"> {{item.name}}</p>\n                            <i class=\"fa fa-check-square-o fa-lg\" *ngIf=\"item.id === cateId\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\"\n                    (click)=\"content.hide()\">{{util.translate('Close')}}</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"close()\">{{util.translate('Save')}}</button>\n            </div>\n        </div><!-- /.modal-content -->\n    </div><!-- /.modal-dialog -->\n</div><!-- /.modal -->\n\n<div bsModal #contentSub=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">{{util.translate('Select Sub Category')}} </h5>\n                <button type=\"button\" class=\"close\" (click)=\"contentSub.hide()\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body long_content\">\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <label>{{util.translate('Select Sub Category')}} </label>\n                        <input style=\"background: transparent !important;\" [(ngModel)]=\"subString\"\n                            (ngModelChange)=\"searchSubCate($event)\" type=\"text\" class=\"form-control\"\n                            [placeholder]=\"util.translate('Search Category')\">\n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <div *ngFor=\"let item of subCates\" (click)=\"subId = item.id\"\n                            style=\"display: flex; flex-direction: row; align-items: center; justify-content: space-between;margin-bottom: 5px; border-bottom: 1px solid lightgray; padding-bottom: 5px;\">\n                            <p style=\"margin: 0px;\"> {{item.name}}</p>\n                            <i class=\"fa fa-check-square-o fa-lg\" *ngIf=\"item.id === subId\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\"\n                    (click)=\"contentSub.hide()\">{{util.translate('Close')}}</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"close2()\">{{util.translate('Save')}}</button>\n            </div>\n        </div><!-- /.modal-content -->\n    </div><!-- /.modal-dialog -->\n</div><!-- /.modal -->\n\n<div bsModal #contentVarient=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">{{util.translate('Add item to variations')}} </h5>\n                <button type=\"button\" class=\"close\" (click)=\"contentVarient.hide()\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body long_content\">\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <label> {{util.translate('Add-ons name')}} </label>\n                        <input style=\"background: transparent !important;\" [(ngModel)]=\"variant_title\" type=\"text\"\n                            class=\"form-control\" [placeholder]=\"util.translate('Add-ons name')\">\n                    </div>\n\n                    <div class=\"col-sm-12\">\n                        <label>{{util.translate('Add-ons price')}} </label>\n                        <input style=\"background: transparent !important;\" [(ngModel)]=\"variant_price\" type=\"number\"\n                            class=\"form-control\" [placeholder]=\"util.translate('Add-ons price')\">\n                    </div>\n\n                    <div class=\"col-sm-12\">\n                        <label>{{util.translate('Add-ons discount')}} </label>\n                        <input style=\"background: transparent !important;\" [(ngModel)]=\"variant_discount\" type=\"number\"\n                            class=\"form-control\" [placeholder]=\"util.translate('Add-ons discount')\">\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\"\n                    (click)=\"contentVarient.hide()\">{{util.translate('Close')}}</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"close3()\">{{util.translate('Save')}}</button>\n            </div>\n        </div><!-- /.modal-content -->\n    </div><!-- /.modal-dialog -->\n</div><!-- /.modal -->");

/***/ })

}]);
//# sourceMappingURL=pages-products-details-products-details-module-es2015.js.map