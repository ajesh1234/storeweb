(function () {
  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-analytics-analytics-module"], {
    /***/
    "RT01": function RT01(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n<div class=\"animated fadeIn\">\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    {{util.translate('Analytics')}}\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                            <div class=\"main_content_div\">\n\n                                <div class=\"content_div\">\n                                    <div class=\"title_flex\">\n                                        <p class=\"title_lbl\">{{util.translate('Delivered Orders')}} </p>\n\n                                    </div>\n\n\n                                    <div class=\"slide_div\">\n                                        <div style=\"border-bottom: 1px solid white;\">\n                                            <p class=\"simp_lbl\">{{util.translate('Today')}} : {{todayStates.label}} </p>\n                                            <p class=\"bold_lbl\">\n                                                <span *ngIf=\"util.cside =='left'\">\n                                                    {{util.currecny}} {{todayStates.total}}\n                                                </span>\n                                                <span *ngIf=\"util.cside =='right'\">\n                                                    {{todayStates.total}} {{util.currecny}}\n                                                </span>\n                                            </p>\n                                            <p class=\"simp_lbl\"> {{todayStates.totalSold}}\n                                                {{util.translate('Items Sold')}}</p>\n                                        </div>\n\n                                        <div class=\"row\">\n                                            <div class=\"col-6\" style=\"padding: 0px;\">\n                                                <div style=\"border-right: 1px solid white;\">\n                                                    <p class=\"simp_lbl\">{{util.translate('This Week')}} : {{weeekStates.label}} </p>\n                                                    <p class=\"bold_lbl\">\n                                                        <span *ngIf=\"util.cside =='left'\">\n                                                            {{util.currecny}} {{weeekStates.total}}\n                                                        </span>\n                                                        <span *ngIf=\"util.cside =='right'\">\n                                                            {{weeekStates.total}} {{util.currecny}}\n                                                        </span>\n                                                    </p>\n                                                    <p class=\"simp_lbl\">{{weeekStates.totalSold}} {{util.translate('Orders')}} </p>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-6\" style=\"padding: 0px;\">\n                                                <div>\n                                                    <p class=\"simp_lbl\">{{util.translate('This Month')}} :{{monthStats.label}}</p>\n                                                    <p class=\"bold_lbl\">\n                                                        <span *ngIf=\"util.cside =='left'\">\n                                                            {{util.currecny}} {{monthStats.total}}\n                                                        </span>\n                                                        <span *ngIf=\"util.cside =='right'\">\n                                                            {{monthStats.total}} {{util.currecny}}\n                                                        </span>\n                                                    </p>\n                                                    <p class=\"simp_lbl\">{{monthStats.totalSold}} {{util.translate('Orders')}} </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"blue_div\">\n                                        <p class=\"bold_lbl\">{{util.translate('Get more orders from')}} {{util.appName}}</p>\n                                        <p class=\"small_lbl\">\n                                            {{util.translate('Items with images lead to more orders compared to items without them. Check your competitor item prices')}}\n                                        </p>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"content_div\">\n                                    <div class=\"title_flex\" style=\"margin-bottom: 0px;\">\n                                        <p class=\"title_lbl\">{{util.translate('Rejected Orders')}} </p>\n\n                                    </div>\n                                    <p class=\"span_lbl\">{{util.translate('Lost sales from orders rejected by you or cancelled')}} </p>\n\n\n                                    <div class=\"border_slider_div\">\n                                        <div style=\"border-bottom: 1px solid lightgrey;\">\n                                            <p class=\"simp_lbl\">{{util.translate('Today')}} : {{todayStates.label}} </p>\n                                            <p class=\"bold_lbl\">\n                                                <span *ngIf=\"util.cside =='left'\">\n                                                    {{util.currecny}} {{todayStatesRejected.total}}\n                                                </span>\n                                                <span *ngIf=\"util.cside =='right'\">\n                                                    {{todayStatesRejected.total}} {{util.currecny}}\n                                                </span>\n                                            </p>\n                                            <p class=\"simp_lbl\">{{todayStatesRejected.totalSold}} {{util.translate('Orders')}} </p>\n                                        </div>\n\n                                        <div class=\"row\">\n                                            <div class=\"col-6\" style=\"padding: 0px;\">\n                                                <div style=\"border-right: 1px solid lightgrey;\">\n                                                    <p class=\"simp_lbl\">{{util.translate('This Week')}} : {{weeekStates.label}} </p>\n                                                    <p class=\"bold_lbl\">\n                                                        <span *ngIf=\"util.cside =='left'\">\n                                                            {{util.currecny}} {{weeekStatesRejected.total}}\n                                                        </span>\n                                                        <span *ngIf=\"util.cside =='right'\">\n                                                            {{weeekStatesRejected.total}} {{util.currecny}}\n                                                        </span>\n                                                    </p>\n                                                    <p class=\"simp_lbl\">{{weeekStatesRejected.totalSold}} {{util.translate('Orders')}} </p>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-6\" style=\"padding: 0px;\">\n                                                <div>\n                                                    <p class=\"simp_lbl\">{{util.translate('This Month')}} : {{monthStats.label}}</p>\n                                                    <p class=\"bold_lbl\">\n                                                        <span *ngIf=\"util.cside =='left'\">\n                                                            {{util.currecny}} {{monthStatsRejected.total}}\n                                                        </span>\n                                                        <span *ngIf=\"util.cside =='right'\">\n                                                            {{monthStatsRejected.total}} {{util.currecny}}\n                                                        </span>\n                                                    </p>\n                                                    <p class=\"simp_lbl\">{{monthStatsRejected.totalSold}} {{util.translate('Orders')}} </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"blue_div\">\n                                        <p class=\"bold_lbl\">\n                                            <span\n                                                *ngIf=\"monthStatsRejected.totalSold <2 || monthStatsRejected.totalSold == 0\">\n                                                   {{util.translate('Great Work!')}} </span>\n                                            <span *ngIf=\"monthStatsRejected.totalSold >2\">\n                                                {{util.translate('Improve yourself')}}\n                                            </span>\n                                        </p>\n                                        <p class=\"small_lbl\">\n                                            <span\n                                                *ngIf=\"monthStatsRejected.totalSold <2 || monthStatsRejected.totalSold == 0\">\n                                                    {{util.translate('You have accepted all orders till now in this month')}}\n                                                </span>\n                                            <span *ngIf=\"monthStatsRejected.totalSold >2\">\n                                                {{util.translate(\"You have some rejected and cancelled orders on your current month's stats, this will impact on your future sells, improve your self\")}}\n                                            </span>\n                                        </p>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"content_div\">\n                                    <div class=\"title_flex\" style=\"margin-bottom: 0px;\">\n                                        <p class=\"title_lbl\">{{util.translate('Customer complaints')}} </p>\n                                    </div>\n                                    <p class=\"span_lbl\">{{util.translate('Details from')}}\n                                        <span> {{monthStats.label}} </span>&nbsp;\n\n                                    </p>\n\n                                    <div class=\"border_div\">\n                                        <div class=\"inner_content inner_flex\" *ngFor=\"let item of complaints\">\n                                            <p class=\"small_lbl\">{{util.translate(reasons[item.reason_id])}}\n                                                <br>\n                                                <span style=\"font-size: 10px;\"> {{item.short_message}} </span>\n                                            </p>\n                                            <p class=\"small_lbl\"> #{{item.order_id}}</p>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"content_div\">\n                                    <div class=\"title_flex\" style=\"margin-bottom: 0px;\">\n                                        <p class=\"title_lbl\">{{util.translate('Top Items in your store')}} </p>\n                                    </div>\n                                    <p class=\"span_lbl\">{{util.translate('Details from')}}\n                                        <span>{{monthStats.label}}</span>&nbsp;\n\n                                    </p>\n\n                                    <div class=\"row_flex\">\n                                        <div class=\"f_div\" style=\"background: #f6f6f6;\">\n                                            <p>{{util.translate('Store Items')}} </p>\n                                        </div>\n\n                                        <div class=\"l_div\" style=\"background: #f6f6f6;\">\n                                            <p>{{util.translate('Quantity Sold')}} </p>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"row_flex\" *ngFor=\"let item of topProducts\">\n                                        <div class=\"f_div\">\n                                            <p>{{item.items.name}}</p>\n                                        </div>\n\n                                        <div class=\"l_div\">\n                                            <p>{{item.counts}}</p>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"blue_div\" style=\"margin-top: 20px;\">\n                                        <p class=\"bold_lbl\">{{util.translate('Run promotions to get more orders')}} </p>\n                                        <p class=\"small_lbl\">\n                                            {{util.translate('Set campaigns on your own and offer customized discounts to give a further boost to your sales.')}}\n                                        </p>\n                                        <!-- <ion-button mode=\"ios\">\n                                            <ion-icon slot=\"end\" name=\"caret-forward-outline\"></ion-icon>\n                                            Start a promo\n                                        </ion-button> -->\n                                    </div>\n\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class=\"col-lg-6\">\n                            <div class=\"chart_content_div\">\n                                <div class=\"content_div\">\n                                    <p class=\"title_lbl\">{{util.translate('Orders Trends')}} </p>\n\n                                    <div class=\"color_flex\">\n                                        <div class=\"color_div\"></div>\n                                        <p>{{util.translate('Total number of orders today')}} </p>\n                                    </div>\n\n                                    <div style=\"display: block;\">\n                                        <canvas baseChart [datasets]=\"barChartDataToday\" [labels]=\"barChartLabelsToday\"\n                                            [options]=\"barChartOptions\" [plugins]=\"barChartPlugins\"\n                                            [legend]=\"barChartLegend\" [chartType]=\"barChartType\">\n                                        </canvas>\n                                    </div>\n\n                                    <div class=\"color_flex\">\n                                        <div class=\"color_div\"></div>\n                                        <p>{{util.translate('Total number of orders this weeks')}} </p>\n                                    </div>\n\n                                    <div style=\"display: block;\">\n                                        <canvas baseChart [datasets]=\"barChartDataWeeks\" [labels]=\"barChartLabelsWeeks\"\n                                            [options]=\"barChartOptions\" [plugins]=\"barChartPlugins\"\n                                            [legend]=\"barChartLegend\" [chartType]=\"barChartType\">\n                                        </canvas>\n                                    </div>\n\n                                    <div class=\"color_flex\">\n                                        <div class=\"color_div\"></div>\n                                        <p> {{util.translate('Total number of orders this months')}} </p>\n                                    </div>\n\n                                    <div style=\"display: block;\">\n                                        <canvas baseChart [datasets]=\"barChartDataMonths\"\n                                            [labels]=\"barChartLabelsMonths\" [options]=\"barChartOptions\"\n                                            [plugins]=\"barChartPlugins\" [legend]=\"barChartLegend\"\n                                            [chartType]=\"barChartType\">\n                                        </canvas>\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class=\"col-lg-6\">\n                            <div class=\"chart_content_div\">\n                                <div class=\"content_div\">\n                                    <div class=\"content_div\">\n                                        <p class=\"title_lbl\" style=\"margin-bottom: 0px;\">\n                                            {{util.translate(\"Month's distribution of your orders\")}}\n                                        </p>\n                                        <p class=\"span_lbl\">{{util.translate('Details from')}}\n                                            <span>{{monthLabel}}</span>&nbsp;\n\n                                        </p>\n\n                                        <p class=\"no_lbl\">\n                                            {{util.translate('Top Sells this months')}}\n                                        </p>\n\n                                        <div class=\"chart_flex\">\n                                            <div class=\"color_content\" style=\"width: 50%;\">\n\n                                                <div class=\"color_flex\" *ngFor=\"let item of topProducts;\">\n                                                    <div class=\"color_div\"></div>\n                                                    <p> {{item.items.name}} - ({{item.counts}}) </p>\n                                                </div>\n\n                                            </div>\n\n                                        </div>\n\n                                        <div class=\"line_div\"></div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"col-lg-6\">\n                            <div class=\"chart_content_div\">\n                                <div class=\"content_div\">\n                                    <div class=\"card-body\">\n                                        <div class=\"chart-wrapper\">\n                                            <canvas baseChart [datasets]=\"doughnutChartData\"\n                                                [chartType]=\"doughnutChartType\" [labels]=\"doughnutChartLabels\">\n                                                [options]=\"barChartOptions\"\n                                            </canvas>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>";
      /***/
    },

    /***/
    "SCOP": function SCOP(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AnalyticsRoutingModule", function () {
        return AnalyticsRoutingModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/router */
      "iInd");
      /* harmony import */


      var _analytics_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./analytics.component */
      "TmIx");

      var routes = [{
        path: '',
        component: _analytics_component__WEBPACK_IMPORTED_MODULE_3__["AnalyticsComponent"]
      }];

      var AnalyticsRoutingModule = function AnalyticsRoutingModule() {
        _classCallCheck(this, AnalyticsRoutingModule);
      };

      AnalyticsRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
      })], AnalyticsRoutingModule);
      /***/
    },

    /***/
    "TmIx": function TmIx(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AnalyticsComponent", function () {
        return AnalyticsComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_analytics_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./analytics.component.html */
      "RT01");
      /* harmony import */


      var _analytics_component_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./analytics.component.scss */
      "pZ1X");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! moment */
      "wd/R");
      /* harmony import */


      var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
      /* harmony import */


      var _services_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ../../services/api.service */
      "H+bZ");
      /* harmony import */


      var _services_util_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../../services/util.service */
      "2Rin");

      var AnalyticsComponent = /*#__PURE__*/function () {
        function AnalyticsComponent(util, api) {
          _classCallCheck(this, AnalyticsComponent);

          this.util = util;
          this.api = api;
          this.barChartOptions = {
            responsive: true
          };
          this.barChartType = 'bar';
          this.doughnutChartType = 'doughnut';
          this.todayStates = {
            total: 0,
            totalSold: 0,
            label: ''
          };
          this.weeekStates = {
            label: '',
            total: 0,
            totalSold: 0
          };
          this.monthStats = {
            label: '',
            total: 0,
            totalSold: 0
          };
          this.todayStatesRejected = {
            total: 0,
            totalSold: 0
          };
          this.weeekStatesRejected = {
            total: 0,
            totalSold: 0
          };
          this.monthStatsRejected = {
            total: 0,
            totalSold: 0
          };
          this.topProducts = [];
          this.monthsChartData = [];
          this.weeksChartData = [];
          this.todayChartData = [];
          this.complaints = [];
          this.reasons = ['The product arrived too late', 'The product did not match the description', 'The purchase was fraudulent', 'The product was damaged or defective', 'The merchant shipped the wrong item', 'Wrong Item Size or Wrong Product Shipped', 'Driver arrived too late', 'Driver behavior', 'Store Vendors behavior', 'Issue with Payment Amout', 'Others'];
          this.issue_With = ['', 'Order', 'Store', 'Driver', 'Product'];
          this.barChartLabelsMonths = [];
          this.barChartLabelsWeeks = [];
          this.barChartLabelsToday = []; // public barChartType: ChartType = 'bar';

          this.barChartLegend = false;
          this.barChartPlugins = [];
          this.barChartDataMonths = [{
            data: [],
            label: 'Monthly'
          }];
          this.barChartDataWeeks = [{
            data: [],
            label: 'Weekly'
          }];
          this.barChartDataToday = [{
            data: [],
            label: 'Today'
          }];
          this.doughnutChartLabels = [];
          this.doughnutChartData = [{
            data: []
          }]; // public doughnutChartType: ChartType = 'doughnut';

          this.topProductsChartData = [];
          this.monthLabel = '';
          this.getStasData();
        }

        _createClass(AnalyticsComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "getStasData",
          value: function getStasData() {
            var _this = this;

            this.api.post_private('v1/orders/getStoreStatsData', {
              id: localStorage.getItem('uid')
            }).then(function (data) {
              console.log(data);

              if (data && data.status && data.status == 200 && data.data) {
                var week = data.data.week.data;
                var month = data.data.month.data;
                var today = data.data.today.data;
                _this.complaints = data.data.complaints;
                _this.weeekStates.label = data.data.week.label;
                _this.todayStates.label = data.data.today.label;
                _this.monthStats.label = data.data.month.label;
                console.log(week);
                var weekDeliveredOrder = [];
                var weekDeliveredTotal = 0;
                var weekRejectedOrder = [];
                var weekRejectedTotal = 0;
                var monthDeliveredOrder = [];
                var monthDeliveredTotal = 0;
                var monthRejectOrder = [];
                var monthRejectedTotal = 0;
                var todayDeliveredOrder = [];
                var todayDeliveredTotal = 0;
                var todayRejectOrder = [];
                var todayRejectedTotal = 0;
                var allOrders = [];
                today.forEach(function (element) {
                  return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                    var info, selected, status;
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            if (function (x) {
                              try {
                                JSON.parse(x);
                                return true;
                              } catch (e) {
                                return false;
                              }
                            }(element.orders)) {
                              element.orders = JSON.parse(element.orders);
                              element.orders = element.orders.filter(function (x) {
                                return x.store_id == localStorage.getItem('uid');
                              });

                              if (function (x) {
                                try {
                                  JSON.parse(x);
                                  return true;
                                } catch (e) {
                                  return false;
                                }
                              }(element.status)) {
                                info = JSON.parse(element.status);
                                selected = info.filter(function (x) {
                                  return x.id == localStorage.getItem('uid');
                                });

                                if (selected && selected.length) {
                                  element.orders.forEach(function (element) {
                                    allOrders.push(element);
                                  });
                                  status = selected[0].status;

                                  if (status == 'delivered') {
                                    element.orders.forEach(function (order) {
                                      var price = 0;

                                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                                        console.log('strings', element.id);
                                        order.variations = JSON.parse(order.variations);
                                        console.log(order['variant']);

                                        if (order["variant"] == undefined) {
                                          order['variant'] = 0;
                                        }
                                      }

                                      if (order && order.discount == 0) {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.original_price) * order.quantiy;
                                        }
                                      } else {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.sell_price) * order.quantiy;
                                        }
                                      }

                                      todayDeliveredTotal = todayDeliveredTotal + price;
                                      todayDeliveredOrder.push(order);
                                    });
                                  }

                                  if (status == 'rejected' || status == 'cancelled') {
                                    element.orders.forEach(function (order) {
                                      var price = 0;

                                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                                        console.log('strings', element.id);
                                        order.variations = JSON.parse(order.variations);
                                        console.log(order['variant']);

                                        if (order["variant"] == undefined) {
                                          order['variant'] = 0;
                                        }
                                      }

                                      if (order && order.discount == 0) {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.original_price) * order.quantiy;
                                        }
                                      } else {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.sell_price) * order.quantiy;
                                        }
                                      }

                                      todayRejectedTotal = todayRejectedTotal + price;
                                      todayRejectOrder.push(order);
                                    });
                                  }
                                }
                              }
                            }

                          case 1:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee);
                  }));
                });

                var todaysDateChart = _toConsumableArray(new Set(today.map(function (item) {
                  return moment__WEBPACK_IMPORTED_MODULE_4__(item.date_time).format('DD-MMM hh: a');
                })));

                var todaysDataChart = [];
                todaysDateChart.forEach(function (dt) {
                  var item = {
                    date: dt,
                    sells: today.filter(function (x) {
                      return moment__WEBPACK_IMPORTED_MODULE_4__(x.date_time).format('DD-MMM hh: a') == dt;
                    }),
                    totalSell: 0
                  };
                  todaysDataChart.push(item);
                });
                todaysDataChart.forEach(function (data) {
                  var orderTotal = 0;
                  data.sells.forEach(function (element) {
                    element.orders.forEach(function (order) {
                      var price = 0;

                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                        console.log('strings', element.id);
                        order.variations = JSON.parse(order.variations);
                        console.log(order['variant']);

                        if (order["variant"] == undefined) {
                          order['variant'] = 0;
                        }
                      }

                      if (order && order.discount == 0) {
                        if (order.size == 1) {
                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                          } else {
                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                          }
                        } else {
                          price = price + parseFloat(order.original_price) * order.quantiy;
                        }
                      } else {
                        if (order.size == 1) {
                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                          } else {
                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                          }
                        } else {
                          price = price + parseFloat(order.sell_price) * order.quantiy;
                        }
                      }

                      orderTotal = orderTotal + price;
                    });
                  });
                  data.totalSell = orderTotal;
                  console.log('order total ->', orderTotal);
                });
                _this.todayChartData = todaysDataChart;
                console.log('todayChartData data chart', todaysDataChart);
                week.forEach(function (element) {
                  return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
                    var info, selected, status;
                    return regeneratorRuntime.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            if (function (x) {
                              try {
                                JSON.parse(x);
                                return true;
                              } catch (e) {
                                return false;
                              }
                            }(element.orders)) {
                              element.orders = JSON.parse(element.orders);
                              element.orders = element.orders.filter(function (x) {
                                return x.store_id == localStorage.getItem('uid');
                              });

                              if (function (x) {
                                try {
                                  JSON.parse(x);
                                  return true;
                                } catch (e) {
                                  return false;
                                }
                              }(element.status)) {
                                info = JSON.parse(element.status);
                                selected = info.filter(function (x) {
                                  return x.id == localStorage.getItem('uid');
                                });

                                if (selected && selected.length) {
                                  element.orders.forEach(function (element) {
                                    allOrders.push(element);
                                  });
                                  status = selected[0].status;

                                  if (status == 'delivered') {
                                    element.orders.forEach(function (order) {
                                      var price = 0;

                                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                                        console.log('strings', element.id);
                                        order.variations = JSON.parse(order.variations);
                                        console.log(order['variant']);

                                        if (order["variant"] == undefined) {
                                          order['variant'] = 0;
                                        }
                                      }

                                      if (order && order.discount == 0) {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.original_price) * order.quantiy;
                                        }
                                      } else {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.sell_price) * order.quantiy;
                                        }
                                      }

                                      weekDeliveredTotal = weekDeliveredTotal + price;
                                      weekDeliveredOrder.push(order);
                                    });
                                  }

                                  if (status == 'rejected' || status == 'cancelled') {
                                    element.orders.forEach(function (order) {
                                      var price = 0;

                                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                                        console.log('strings', element.id);
                                        order.variations = JSON.parse(order.variations);
                                        console.log(order['variant']);

                                        if (order["variant"] == undefined) {
                                          order['variant'] = 0;
                                        }
                                      }

                                      if (order && order.discount == 0) {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.original_price) * order.quantiy;
                                        }
                                      } else {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.sell_price) * order.quantiy;
                                        }
                                      }

                                      weekRejectedTotal = weekRejectedTotal + price;
                                      weekRejectedOrder.push(order);
                                    });
                                  }
                                }
                              }
                            }

                          case 1:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2);
                  }));
                });

                var weeksDateChart = _toConsumableArray(new Set(week.map(function (item) {
                  return moment__WEBPACK_IMPORTED_MODULE_4__(item.date_time).format('DD MMM');
                })));

                var weeksDataChart = [];
                weeksDateChart.forEach(function (dt) {
                  var item = {
                    date: dt,
                    sells: week.filter(function (x) {
                      return moment__WEBPACK_IMPORTED_MODULE_4__(x.date_time).format('DD MMM') == dt;
                    }),
                    totalSell: 0
                  };
                  weeksDataChart.push(item);
                });
                weeksDataChart.forEach(function (data) {
                  var orderTotal = 0;
                  data.sells.forEach(function (element) {
                    element.orders.forEach(function (order) {
                      var price = 0;

                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                        console.log('strings', element.id);
                        order.variations = JSON.parse(order.variations);
                        console.log(order['variant']);

                        if (order["variant"] == undefined) {
                          order['variant'] = 0;
                        }
                      }

                      if (order && order.discount == 0) {
                        if (order.size == 1) {
                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                          } else {
                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                          }
                        } else {
                          price = price + parseFloat(order.original_price) * order.quantiy;
                        }
                      } else {
                        if (order.size == 1) {
                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                          } else {
                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                          }
                        } else {
                          price = price + parseFloat(order.sell_price) * order.quantiy;
                        }
                      }

                      orderTotal = orderTotal + price;
                    });
                  });
                  data.totalSell = orderTotal;
                  console.log('order total ->', orderTotal);
                });
                _this.weeksChartData = weeksDataChart;
                console.log('weeks data chart', weeksDataChart);
                month.forEach(function (element) {
                  return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                    var info, selected, status;
                    return regeneratorRuntime.wrap(function _callee3$(_context3) {
                      while (1) {
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            if (function (x) {
                              try {
                                JSON.parse(x);
                                return true;
                              } catch (e) {
                                return false;
                              }
                            }(element.orders)) {
                              element.orders = JSON.parse(element.orders);
                              element.orders = element.orders.filter(function (x) {
                                return x.store_id == localStorage.getItem('uid');
                              });

                              if (function (x) {
                                try {
                                  JSON.parse(x);
                                  return true;
                                } catch (e) {
                                  return false;
                                }
                              }(element.status)) {
                                info = JSON.parse(element.status);
                                selected = info.filter(function (x) {
                                  return x.id == localStorage.getItem('uid');
                                });

                                if (selected && selected.length) {
                                  element.orders.forEach(function (element) {
                                    allOrders.push(element);
                                  });
                                  status = selected[0].status;

                                  if (status == 'delivered') {
                                    element.orders.forEach(function (order) {
                                      var price = 0;

                                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                                        console.log('strings', element.id);
                                        order.variations = JSON.parse(order.variations);
                                        console.log(order['variant']);

                                        if (order["variant"] == undefined) {
                                          order['variant'] = 0;
                                        }
                                      }

                                      if (order && order.discount == 0) {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.original_price) * order.quantiy;
                                        }
                                      } else {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.sell_price) * order.quantiy;
                                        }
                                      }

                                      monthDeliveredTotal = monthDeliveredTotal + price;
                                      monthDeliveredOrder.push(order);
                                    });
                                  }

                                  if (status == 'rejected' || status == 'cancelled') {
                                    element.orders.forEach(function (order) {
                                      var price = 0;

                                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                                        console.log('strings', element.id);
                                        order.variations = JSON.parse(order.variations);
                                        console.log(order['variant']);

                                        if (order["variant"] == undefined) {
                                          order['variant'] = 0;
                                        }
                                      }

                                      if (order && order.discount == 0) {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.original_price) * order.quantiy;
                                        }
                                      } else {
                                        if (order.size == 1) {
                                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                                          } else {
                                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                                          }
                                        } else {
                                          price = price + parseFloat(order.sell_price) * order.quantiy;
                                        }
                                      }

                                      monthRejectedTotal = monthRejectedTotal + price;
                                      monthRejectOrder.push(order);
                                    });
                                  }
                                }
                              }
                            }

                          case 1:
                          case "end":
                            return _context3.stop();
                        }
                      }
                    }, _callee3);
                  }));
                });

                var monthsDateChart = _toConsumableArray(new Set(month.map(function (item) {
                  return moment__WEBPACK_IMPORTED_MODULE_4__(item.date_time).format('DD MMM');
                })));

                var monthsDataChart = [];
                monthsDateChart.forEach(function (dt) {
                  var item = {
                    date: dt,
                    sells: month.filter(function (x) {
                      return moment__WEBPACK_IMPORTED_MODULE_4__(x.date_time).format('DD MMM') == dt;
                    }),
                    totalSell: 0
                  };
                  monthsDataChart.push(item);
                });
                monthsDataChart.forEach(function (data) {
                  var orderTotal = 0;
                  data.sells.forEach(function (element) {
                    element.orders.forEach(function (order) {
                      var price = 0;

                      if (order.variations && order.variations !== '' && typeof order.variations == 'string') {
                        console.log('strings', element.id);
                        order.variations = JSON.parse(order.variations);
                        console.log(order['variant']);

                        if (order["variant"] == undefined) {
                          order['variant'] = 0;
                        }
                      }

                      if (order && order.discount == 0) {
                        if (order.size == 1) {
                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                          } else {
                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                          }
                        } else {
                          price = price + parseFloat(order.original_price) * order.quantiy;
                        }
                      } else {
                        if (order.size == 1) {
                          if (order.variations[0].items[order.variant].discount && order.variations[0].items[order.variant].discount !== 0) {
                            price = price + parseFloat(order.variations[0].items[order.variant].discount) * order.quantiy;
                          } else {
                            price = price + parseFloat(order.variations[0].items[order.variant].price) * order.quantiy;
                          }
                        } else {
                          price = price + parseFloat(order.sell_price) * order.quantiy;
                        }
                      }

                      orderTotal = orderTotal + price;
                    });
                  });
                  data.totalSell = orderTotal;
                  console.log('order total ->', orderTotal);
                });
                _this.monthsChartData = monthsDataChart;
                console.log('months data chart', monthsDataChart);
                _this.todayStates.total = todayDeliveredTotal;
                _this.todayStates.totalSold = todayDeliveredOrder.length;
                _this.todayStatesRejected.total = todayRejectedTotal;
                _this.todayStatesRejected.totalSold = todayRejectOrder.length;
                _this.weeekStates.total = weekDeliveredTotal;
                _this.weeekStates.totalSold = weekDeliveredOrder.length;
                _this.weeekStatesRejected.total = weekRejectedTotal;
                _this.weeekStatesRejected.totalSold = weekRejectedOrder.length;
                _this.monthStats.total = monthDeliveredTotal;
                _this.monthStats.totalSold = monthDeliveredOrder.length;
                _this.monthStatsRejected.total = monthRejectedTotal;
                _this.monthStatsRejected.totalSold = monthRejectOrder.length;
                console.log('today delivered', todayDeliveredOrder, todayDeliveredTotal);
                console.log('today rejected', todayRejectOrder, todayRejectedTotal);
                console.log('week delivered', weekDeliveredOrder, weekDeliveredTotal);
                console.log('week rejected', weekRejectedOrder, weekRejectedTotal);
                console.log('month delivered', monthDeliveredOrder, monthDeliveredTotal);
                console.log('month rejected', monthRejectOrder, monthRejectedTotal);
                console.log('all Order', allOrders);

                var uniqueId = _toConsumableArray(new Set(allOrders.map(function (item) {
                  return item.id;
                })));

                console.log(uniqueId);
                var topProducts = [];
                uniqueId.forEach(function (element) {
                  var info = allOrders.filter(function (x) {
                    return x.id == element;
                  });

                  if (info && info.length > 0) {
                    if (topProducts.length < 10) {
                      var item = {
                        id: element,
                        items: info[0],
                        counts: info.length
                      };
                      topProducts.push(item);
                    }
                  }
                });
                _this.topProducts = topProducts.sort(function (_ref, _ref2) {
                  var a = _ref.counts;
                  var b = _ref2.counts;
                  return b - a;
                });
                console.log(topProducts);
                console.log(_this.topProducts);

                _this.openChart();
              }
            }, function (error) {
              console.log(error);

              _this.util.apiErrorHandler(error);
            })["catch"](function (error) {
              console.log(error);

              _this.util.apiErrorHandler(error);
            });
          }
        }, {
          key: "openChart",
          value: function openChart() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
              var _this2 = this;

              return regeneratorRuntime.wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      console.log('parse chart');
                      this.topProducts.forEach(function (element) {
                        _this2.doughnutChartLabels.push(element.items.name);

                        _this2.doughnutChartData[0].data.push(element.counts);
                      });
                      this.monthsChartData.forEach(function (element) {
                        _this2.barChartLabelsMonths.push(element.date);

                        _this2.barChartDataMonths[0].data.push(element.totalSell);
                      });
                      this.weeksChartData.forEach(function (element) {
                        _this2.barChartLabelsWeeks.push(element.date);

                        _this2.barChartDataWeeks[0].data.push(element.totalSell);
                      });
                      this.todayChartData.forEach(function (element) {
                        _this2.barChartLabelsToday.push(element.date);

                        _this2.barChartDataToday[0].data.push(element.totalSell);
                      });
                      this.monthLabel = this.monthStats.label;
                      console.log(this);

                    case 7:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4, this);
            }));
          }
        }]);

        return AnalyticsComponent;
      }();

      AnalyticsComponent.ctorParameters = function () {
        return [{
          type: _services_util_service__WEBPACK_IMPORTED_MODULE_6__["UtilService"]
        }, {
          type: _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]
        }];
      };

      AnalyticsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-analytics',
        template: _raw_loader_analytics_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_analytics_component_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_services_util_service__WEBPACK_IMPORTED_MODULE_6__["UtilService"], _services_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]])], AnalyticsComponent);
      /***/
    },

    /***/
    "hX6p": function hX6p(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AnalyticsModule", function () {
        return AnalyticsModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "8Y7J");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/common */
      "SVse");
      /* harmony import */


      var _analytics_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./analytics-routing.module */
      "SCOP");
      /* harmony import */


      var _analytics_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./analytics.component */
      "TmIx");
      /* harmony import */


      var ng2_charts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ng2-charts */
      "hrfs");

      var AnalyticsModule = function AnalyticsModule() {
        _classCallCheck(this, AnalyticsModule);
      };

      AnalyticsModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [_analytics_component__WEBPACK_IMPORTED_MODULE_4__["AnalyticsComponent"]],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _analytics_routing_module__WEBPACK_IMPORTED_MODULE_3__["AnalyticsRoutingModule"], ng2_charts__WEBPACK_IMPORTED_MODULE_5__["ChartsModule"]]
      })], AnalyticsModule);
      /***/
    },

    /***/
    "pZ1X": function pZ1X(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".main_content_div .content_div {\n  padding: 16px;\n  background: white;\n  margin-bottom: 10px;\n}\n.main_content_div .content_div .title_flex {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n}\n.main_content_div .content_div .title_flex .title_lbl {\n  font-size: 18px;\n  font-weight: bold;\n}\n.main_content_div .content_div .title_flex div {\n  display: flex;\n  align-items: center;\n}\n.main_content_div .content_div .span_lbl {\n  font-size: 15px;\n}\n.main_content_div .content_div .span_lbl span {\n  color: green;\n}\n.main_content_div .content_div .slide_div {\n  border-radius: 10px;\n  background: #0594aa;\n  width: 100%;\n  margin-bottom: 40px;\n}\n.main_content_div .content_div .slide_div div {\n  padding: 10px;\n}\n.main_content_div .content_div .slide_div div .simp_lbl {\n  color: white;\n  text-align: left;\n  font-size: 14px;\n}\n.main_content_div .content_div .slide_div div .bold_lbl {\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  text-align: left;\n}\n.main_content_div .content_div .blue_div {\n  background: #394a84;\n  padding: 10px;\n  border-radius: 10px;\n}\n.main_content_div .content_div .blue_div .bold_lbl {\n  color: white;\n  font-weight: bold;\n  margin-bottom: 8px;\n}\n.main_content_div .content_div .blue_div .small_lbl {\n  color: white;\n  font-size: 13px;\n}\n.main_content_div .content_div .border_slider_div {\n  border-radius: 10px;\n  border: 1px solid lightgrey;\n  margin-bottom: 40px;\n  width: 100%;\n}\n.main_content_div .content_div .border_slider_div div {\n  padding: 10px;\n}\n.main_content_div .content_div .border_slider_div div .simp_lbl {\n  text-align: left;\n  font-size: 14px;\n}\n.main_content_div .content_div .border_slider_div div .bold_lbl {\n  font-weight: bold;\n  font-size: 18px;\n  text-align: left;\n}\n.main_content_div .content_div .border_div {\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  margin-bottom: 16px;\n}\n.main_content_div .content_div .border_div .inner_content {\n  padding: 10px;\n}\n.main_content_div .content_div .border_div .inner_content .bold_lbl {\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n.main_content_div .content_div .border_div .inner_content .time_flex {\n  display: flex;\n  color: grey;\n}\n.main_content_div .content_div .border_div .inner_content .time_flex div {\n  display: flex;\n  align-items: center;\n}\n.main_content_div .content_div .border_div .inner_content .grey_lbl {\n  font-size: 14px;\n  color: grey;\n}\n.main_content_div .content_div .border_div .inner_content .grey_lbl span {\n  font-weight: bold;\n}\n.main_content_div .content_div .border_div .inner_flex {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.main_content_div .content_div .border_div .inner_flex .small_lbl {\n  font-size: 14px;\n}\n.main_content_div .content_div .row_flex {\n  display: flex;\n  margin-left: -16px;\n  margin-right: -16px;\n}\n.main_content_div .content_div .row_flex div {\n  padding: 16px 10px;\n}\n.main_content_div .content_div .row_flex .f_div {\n  width: 50%;\n}\n.main_content_div .content_div .row_flex .l_div {\n  width: 50%;\n}\n.chart_content_div .content_div {\n  padding: 16px;\n  background: white;\n  margin-bottom: 12px;\n}\n.chart_content_div .content_div .title_lbl {\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 16px;\n}\n.chart_content_div .content_div .color_flex {\n  display: flex;\n  align-items: center;\n}\n.chart_content_div .content_div .color_flex .color_div {\n  width: 20px;\n  height: 6px;\n  border-radius: 10px;\n  background: green;\n}\n.chart_content_div .content_div .blue_div {\n  background: #394a84;\n  padding: 10px;\n  border-radius: 10px;\n}\n.chart_content_div .content_div .blue_div .bold_lbl {\n  color: white;\n  font-weight: bold;\n  margin-bottom: 8px;\n}\n.chart_content_div .content_div .blue_div .small_lbl {\n  color: white;\n  font-size: 13px;\n}\n.chart_content_div .content_div .span_lbl {\n  font-size: 15px;\n  margin-bottom: 20px;\n}\n.chart_content_div .content_div .span_lbl span {\n  color: green;\n}\n.chart_content_div .content_div .no_lbl {\n  margin-bottom: 20px;\n  margin-top: 20px;\n  font-size: 14px;\n}\n.chart_content_div .content_div .no_lbl span {\n  font-weight: bold;\n  font-size: 26px;\n  margin-right: 8px;\n}\n.chart_content_div .content_div .chart_flex {\n  display: flex;\n}\n.chart_content_div .content_div .chart_flex .color_content .color_flex {\n  margin-bottom: 20px;\n}\n.chart_content_div .content_div .line_div {\n  width: 100%;\n  height: 1px;\n  background: lightgray;\n}\n/*# sourceMappingURL=data:application/json;base64, */";
      /***/
    }
  }]);
})();
//# sourceMappingURL=pages-analytics-analytics-module-es5.js.map