{"version":3,"sources":["webpack:///src/app/pages/app-password/app-password.module.ts","webpack:///src/app/pages/app-password/app-password.component.html","webpack:///src/app/pages/app-password/app-password.component.ts","webpack:///src/app/pages/app-password/app-password-routing.module.ts","webpack:///src/app/pages/app-password/app-password.component.scss"],"names":["AppPasswordModule","declarations","imports","forRoot","animation","AppPasswordComponent","util","api","oldPassword","newPassword","confirmPassword","haveData","error","translate","update","param","current_password","new_password","id","localStorage","getItem","show","post_private","then","data","console","log","hide","status","success","window","location","reload","apiErrorHandler","selector","template","routes","path","component","AppPasswordRoutingModule","forChild","exports"],"mappings":"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","file":"pages-app-password-app-password-module-es5.js","sourcesContent":["\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppPasswordRoutingModule } from './app-password-routing.module';\nimport { AppPasswordComponent } from './app-password.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [\n    AppPasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    AppPasswordRoutingModule,\n    FormsModule,\n    NgxSpinnerModule,\n    ModalModule.forRoot(),\n    NgxSkeletonLoaderModule.forRoot({ animation: 'progress-dark' })\n  ]\n})\nexport class AppPasswordModule { }\n","export default \"\\n<ngx-spinner></ngx-spinner>\\n<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    {{util.translate('Change Password')}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label>{{util.translate('Old Password')}}</label>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                    [(ngModel)]=\\\"oldPassword\\\" [placeholder]=\\\"util.translate('Old Password')\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label>{{util.translate('New Password')}}</label>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                    [(ngModel)]=\\\"newPassword\\\" [placeholder]=\\\"util.translate('New Password')\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label>{{util.translate('Confirm Password')}}</label>\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                    [(ngModel)]=\\\"confirmPassword\\\" [placeholder]=\\\"util.translate('Confirm Password')\\\">\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"createSettings()\\\">\\n                        {{util.translate('Submit')}}</button>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ApiService } from '../../services/api.service';\nimport { UtilService } from '../../services/util.service';\n\n@Component({\n  selector: 'app-app-password',\n  templateUrl: './app-password.component.html',\n  styleUrls: ['./app-password.component.scss']\n})\nexport class AppPasswordComponent implements OnInit {\n  @ViewChild('largeModal') public largeModal: ModalDirective;\n\n\n  oldPassword: any = '';\n  newPassword: any = '';\n  confirmPassword: any = '';\n\n  id: any;\n  haveData: boolean = false;\n  \n  constructor(\n    public util: UtilService,\n    public api: ApiService,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  createSettings() {\n\n    if (this.oldPassword == '' || this.newPassword == null || this.confirmPassword == '') {\n      this.util.error(this.util.translate('All fields are required'));\n      return false;\n    }\n    if (this.newPassword != this.confirmPassword) {\n      this.util.error(this.util.translate('New and confirm password not matching'));\n      return false;\n    }\n    this.update();\n  }\n\n  update() {\n    const param = {\n      current_password: this.oldPassword,\n      new_password: this.newPassword,\n      id: localStorage.getItem('uid')\n    }\n\n    this.util.show();\n    this.api.post_private('v1/profile/upassword', param).then((data: any) => {\n      console.log(data);\n      this.util.hide();\n      if (data && data.status == 200) {\n        this.util.success(this.util.translate('Password has been changed successfully'));\n        window.location.reload();\n      }\n\n    }, error => {\n      console.log(error);\n      this.util.hide();\n      this.util.apiErrorHandler(error);\n    }).catch(error => {\n      console.log(error);\n      this.util.hide();\n      this.util.apiErrorHandler(error);\n    });\n  }\n\n}","\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppPasswordComponent } from './app-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AppPasswordRoutingModule { }\n","export default \".image_div {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n.image_div .image_box {\\n  max-width: 120px;\\n  width: 120px;\\n  height: 120px;\\n  position: relative;\\n}\\n.image_div .image_box img {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  -o-object-fit: contain !important;\\n     object-fit: contain !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxhcHAtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxhQUFBO0VBQ0EseUJBQUE7QUFBSjtBQUVJO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0FBQVI7QUFDUTtFQUNJLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxnQ0FBQTtFQUNBLGlDQUFBO0tBQUEsOEJBQUE7QUFDWiIsImZpbGUiOiJhcHAtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5pbWFnZV9kaXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblxuICAgIC5pbWFnZV9ib3gge1xuICAgICAgICBtYXgtd2lkdGg6IDEyMHB4O1xuICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgIGhlaWdodDogMTIwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbiAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW4gIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\";"]}