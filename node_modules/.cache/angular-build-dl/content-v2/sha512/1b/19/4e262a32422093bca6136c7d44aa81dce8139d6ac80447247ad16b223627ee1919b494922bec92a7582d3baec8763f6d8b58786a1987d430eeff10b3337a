{"version":3,"sources":["./src/app/pages/stats/stats.component.html","./node_modules/ngx-print/fesm2015/ngx-print.js","./src/app/pages/stats/stats.component.ts","./src/app/pages/stats/stats.module.ts","./src/app/pages/stats/stats-routing.module.ts","./src/app/pages/stats/stats.component.scss"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,mSAAoO,yBAAyB,wTAAwT,6BAA6B,0TAA0T,6BAA6B,gYAAgY,2BAA2B,2lBAA2lB,6BAA6B,uIAAuI,yWAAyW,yBAAyB,oVAAoV,wFAAwF,mCAAmC,0TAA0T,wEAAwE,eAAe,KAAK,mBAAmB,yEAAyE,eAAe,KAAK,eAAe,MAAM,aAAa,sJAAsJ,kBAAkB,uBAAuB,eAAe,+CAA+C,mBAAmB,uEAAuE,kBAAkB,uBAAuB,+CAA+C,sBAAsB,QAAQ,mBAAmB,GAAG,oBAAoB,gDAAgD,sBAAsB,GAAG,kBAAkB,6GAA6G,kBAAkB,uBAAuB,+CAA+C,oBAAoB,uEAAuE,kBAAkB,uBAAuB,+CAA+C,qBAAqB,4GAA4G,mBAAmB,YAAY,eAAe,+CAA+C,iBAAiB,4GAA4G,mBAAmB,eAAe,KAAK,SAAS,kOAAkO,2DAA2D,sBAAsB,8DAA8D,8BAA8B,8DAA8D,yBAAyB,8DAA8D,yBAAyB,8DAA8D,4BAA4B,8DAA8D,+BAA+B,8DAA8D,8BAA8B,kRAAkR,4DAA4D,SAAS,6DAA6D,gBAAgB,uJAAuJ,aAAa,+DAA+D,aAAa,wXAAwX,eAAe,4DAA4D,YAAY,2JAA2J,YAAY,4DAA4D,eAAe,iNAAiN,eAAe,4DAA4D,eAAe,sGAAsG,eAAe,4DAA4D,eAAe,iNAAiN,eAAe,4DAA4D,kBAAkB,sGAAsG,kBAAkB,4DAA4D,eAAe,iNAAiN,eAAe,4DAA4D,2BAA2B,2JAA2J,2BAA2B,4DAA4D,eAAe,gSAAgS,yQAAyQ,kBAAkB,uBAAuB,gBAAgB,uDAAuD,yBAAyB,iIAAiI,kBAAkB,uBAAuB,gBAAgB,uDAAuD,8BAA8B,8KAA8K,kBAAkB,uBAAuB,gBAAgB,uDAAuD,8BAA8B,qPAAqP,uBAAuB,kBAAkB,8FAA8F,eAAe,GAAG,aAAa,mJAAmJ,aAAa,wDAAwD,eAAe,0IAA0I,wBAAwB,kBAAkB,8FAA8F,eAAe,GAAG,iBAAiB,mJAAmJ,iBAAiB,wDAAwD,eAAe,0IAA0I,uBAAuB,kBAAkB,4FAA4F,eAAe,GAAG,OAAO,iGAAiG,OAAO,GAAG,eAAe,kXAAkX,E;;;;;;;;;;;;ACA5oX;AAAA;AAAA;AAAA;AAAyE;;AAEzE;AACA;AACA,cAAc,uFAAuF;AACrG;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2CAA2C,GAAG;AACxE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mEAAmE,YAAY;AAC/E,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"pages-stats-stats-module-es2015.js","sourcesContent":["export default \"\\n<ngx-spinner></ngx-spinner>\\n<div class=\\\"animated fadeIn\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    {{util.translate('Stats')}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <h5>{{util.translate('Get Stats')}} </h5>\\n                                </div>\\n                                <div class=\\\"card-body reset-table p-t-0\\\">\\n                                    <div class=\\\"form-group row\\\">\\n\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <label>{{util.translate('From Date')}} </label>\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"from\\\" class=\\\"form-control\\\"\\n                                                [placeholder]=\\\"util.translate('From Date')\\\">\\n                                        </div>\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <label>{{util.translate('To Date')}} </label>\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"to\\\" class=\\\"form-control\\\"\\n                                                [placeholder]=\\\"util.translate('To Date')\\\">\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group row\\\">\\n                                        <div class=\\\"col-sm-12\\\">\\n                                            <button class=\\\"btn btn-danger btn-round\\\"\\n                                                (click)=\\\"getStats()\\\">{{util.translate('Get Stats')}}\\n                                            </button>\\n                                            <button style=\\\"margin-left: 20px;\\\" [useExistingCss]=\\\"true\\\"\\n                                                [printTitle]=\\\"storename\\\" printSectionId=\\\"print-section\\\" ngxPrint\\n                                                *ngIf=\\\"from && to && storeOrder?.length\\\" class=\\\"btn btn-primary\\\"><i\\n                                                    class=\\\"icofont icofont-printer\\\"></i>{{util.translate('Print')}}\\n                                            </button>\\n\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <h2 style=\\\"text-align: center;\\\" *ngIf=\\\"from && to && !storeOrder?.length && apiCalled\\\">\\n                        {{util.translate('No Orders Found')}}\\n                    </h2>\\n                    <div class=\\\"row\\\" id=\\\"print-section\\\" *ngIf=\\\"from && to && storeOrder?.length\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\" style=\\\"padding: 20px;\\\">\\n                                    <h3 style=\\\"text-align: center;color: #7ec6aa;\\\">{{util.general.name}}</h3>\\n                                    <p style=\\\"text-align: center;color: #ED7669;\\\">{{getDate(from)}} to {{getDate(to)}}\\n                                    </p>\\n                                    <p\\n                                        style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;\\\">\\n                                        {{util.general.name}}</p>\\n                                    <p style=\\\"text-align: right;font-weight: bold;margin: 0px !important;\\\">\\n                                        {{util.general.address}} <br> {{util.general.city}} {{util.general.state}}<br>\\n                                        {{util.general.country}} {{util.general.zip}}\\n                                    </p>\\n                                    <p style=\\\"text-align: right;font-weight: bold;margin: 0px !important;\\\">\\n                                        {{util.general.email}}</p>\\n                                    <p style=\\\"text-align: right;font-weight: bold;margin: 0px !important;\\\">\\n                                        {{util.general.mobile}}\\n                                    </p>\\n                                    <p style=\\\"text-align: left; font-weight: bold;margin: 0px;color: #aaafad;\\\">\\n                                        {{util.store.name}}\\n                                    </p>\\n                                    <p style=\\\"text-align: left; font-weight: bold;color: #7EC6AA;\\\">{{today()}}</p>\\n                                    <table class=\\\"table table-striped\\\">\\n                                        <thead>\\n                                            <tr class=\\\"text-uppercase\\\" style=\\\"color:#7ec6aa ;\\\">\\n                                                <th>{{util.translate('Id')}} </th>\\n                                                <th>{{util.translate('Ordered on')}} </th>\\n                                                <th>{{util.translate('Items')}} </th>\\n                                                <th>{{util.translate('Total')}} </th>\\n                                                <th>{{util.translate('Discount')}} </th>\\n                                                <th>{{util.translate('Grand Total')}} </th>\\n                                                <th>{{util.translate('Commission')}} </th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let item of storeOrder\\\" style=\\\"background-color: #F5F8FA;\\\">\\n                                                <td>#{{item.id}}</td>\\n                                                <td>{{item.date_time}}</td>\\n                                                <td>\\n                                                    <p *ngFor=\\\"let orders of item.orders;let i =index;\\\">\\n                                                        {{orders.name}} <span\\n                                                            *ngIf=\\\"item.orders.length -1 !== i\\\">,</span>\\n                                                    </p>\\n                                                </td>\\n\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{item.total}}\\n                                                    </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{item.total}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{item.discount}} </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{item.discount}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{item.grand_total}} </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{item.grand_total}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                                <td>\\n                                                    <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}}\\n                                                        {{getCommisions(item.total)}}\\n                                                    </span>\\n                                                    <span *ngIf=\\\"util.cside ==='right'\\\">{{getCommisions(item.total)}}\\n                                                        {{util.currecny}}</span>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <div class=\\\"row\\\" style=\\\"padding: 20px;\\\">\\n                                        <div class=\\\"col-sm-6\\\"></div>\\n                                        <div class=\\\"col-sm-4\\\">\\n                                            <p\\n                                                style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\\\">\\n                                                {{util.translate('Total')}} </p>\\n                                            <p\\n                                                style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\\\">\\n                                                {{util.translate('Commission')}}\\n                                            </p>\\n                                            <p\\n                                                style=\\\"text-align: right;font-weight: bold;margin: 0px !important;color: #7EC6AA;;\\\">\\n                                                {{util.translate('Amount Pay')}}\\n                                            </p>\\n                                        </div>\\n                                        <div class=\\\"col-sm-2\\\">\\n                                            <p style=\\\"color: black !important;margin: 0px !important;text-align: right;\\\">\\n\\n                                                <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}} {{totalAmount}}\\n                                                </span>\\n                                                <span *ngIf=\\\"util.cside ==='right'\\\">{{totalAmount}}\\n                                                    {{util.currecny}}</span>\\n                                            </p>\\n                                            <p style=\\\"color: black !important; margin: 0px !important;text-align: right;\\\">\\n\\n                                                <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}} {{commisionAmount}}\\n                                                </span>\\n                                                <span *ngIf=\\\"util.cside ==='right'\\\">{{commisionAmount}}\\n                                                    {{util.currecny}}</span>\\n                                            </p>\\n                                            <p style=\\\"color: black !important;margin: 0px !important;text-align: right;\\\">\\n                                                <span *ngIf=\\\"util.cside ==='left'\\\">{{util.currecny}} {{toPay}}</span>\\n                                                <span *ngIf=\\\"util.cside ==='right'\\\">{{toPay}} {{util.currecny}}</span>\\n                                                </p>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","import { Directive, HostListener, Input, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nclass NgxPrintDirective {\r\n    constructor() {\r\n        this._printStyle = [];\r\n        /**\r\n         *\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this.useExistingCss = false;\r\n        /**\r\n         * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this.printDelay = 0;\r\n        /**\r\n         *\r\n         *\r\n         * @return html for the given tag\r\n         *\r\n         * \\@memberof NgxPrintDirective\r\n         */\r\n        this._styleSheetFile = '';\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @param {?} values\r\n     * @return {?}\r\n     */\r\n    set printStyle(values) {\r\n        for (let key in values) {\r\n            if (values.hasOwnProperty(key)) {\r\n                this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\r\n            }\r\n        }\r\n        this.returnStyleValues();\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?} the string that create the stylesheet which will be injected\r\n     * later within <style></style> tag.\r\n     *\r\n     * -join/replace to transform an array objects to css-styled string\r\n     *\r\n     */\r\n    returnStyleValues() {\r\n        return `<style> ${this._printStyle.join(' ').replace(/,/g, ';')} </style>`;\r\n    }\r\n    /**\r\n     * \\@memberof NgxPrintDirective\r\n     * @param {?} cssList\r\n     * @return {?}\r\n     */\r\n    set styleSheetFile(cssList) {\r\n        /** @type {?} */\r\n        let linkTagFn = (/**\r\n         * @param {?} cssFileName\r\n         * @return {?}\r\n         */\r\n        function (cssFileName) {\r\n            return `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\r\n        });\r\n        if (cssList.indexOf(',') !== -1) {\r\n            /** @type {?} */\r\n            const valueArr = cssList.split(',');\r\n            for (let val of valueArr) {\r\n                this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\r\n            }\r\n        }\r\n        else {\r\n            this._styleSheetFile = linkTagFn(cssList);\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?} string which contains the link tags containing the css which will\r\n     * be injected later within <head></head> tag.\r\n     *\r\n     */\r\n    returnStyleSheetLinkTags() {\r\n        return this._styleSheetFile;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    getElementTag(tag) {\r\n        /** @type {?} */\r\n        const html = [];\r\n        /** @type {?} */\r\n        const elements = document.getElementsByTagName(tag);\r\n        for (let index = 0; index < elements.length; index++) {\r\n            html.push(elements[index].outerHTML);\r\n        }\r\n        return html.join('\\r\\n');\r\n    }\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {?} data the html element collection to save defaults to\r\n     *\r\n     * @return {?}\r\n     */\r\n    getFormData(data) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            data[i].defaultValue = data[i].value;\r\n            if (data[i].checked) {\r\n                data[i].defaultChecked = true;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?} html section to be printed along with some associated inputs\r\n     *\r\n     */\r\n    getHtmlContents() {\r\n        /** @type {?} */\r\n        let printContents = document.getElementById(this.printSectionId);\r\n        /** @type {?} */\r\n        let innards = printContents.getElementsByTagName('input');\r\n        this.getFormData(innards);\r\n        /** @type {?} */\r\n        let txt = printContents.getElementsByTagName('textarea');\r\n        this.getFormData(txt);\r\n        return printContents.innerHTML;\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * \\@memberof NgxPrintDirective\r\n     * @return {?}\r\n     */\r\n    print() {\r\n        /** @type {?} */\r\n        let printContents;\r\n        /** @type {?} */\r\n        let popupWin;\r\n        /** @type {?} */\r\n        let styles = '';\r\n        /** @type {?} */\r\n        let links = '';\r\n        /** @type {?} */\r\n        const baseTag = this.getElementTag('base');\r\n        if (this.useExistingCss) {\r\n            styles = this.getElementTag('style');\r\n            links = this.getElementTag('link');\r\n        }\r\n        printContents = this.getHtmlContents();\r\n        popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\r\n        popupWin.document.open();\r\n        popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\r\n          ${baseTag}\r\n          ${this.returnStyleValues()}\r\n          ${this.returnStyleSheetLinkTags()}\r\n          ${styles}\r\n          ${links}\r\n        </head>\r\n        <body>\r\n          ${printContents}\r\n          <script defer>\r\n            function triggerPrint(event) {\r\n              window.removeEventListener('load', triggerPrint, false);\r\n              setTimeout(function() {\r\n                closeWindow(window.print());\r\n              }, ${this.printDelay});\r\n            }\r\n            function closeWindow(){\r\n                window.close();\r\n            }\r\n            window.addEventListener('load', triggerPrint, false);\r\n          </script>\r\n        </body>\r\n      </html>`);\r\n        popupWin.document.close();\r\n    }\r\n}\nNgxPrintDirective.ɵfac = function NgxPrintDirective_Factory(t) { return new (t || NgxPrintDirective)(); };\nNgxPrintDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxPrintDirective, selectors: [[\"button\", \"ngxPrint\", \"\"]], hostBindings: function NgxPrintDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NgxPrintDirective_click_HostBindingHandler() { return ctx.print(); });\n    } }, inputs: { useExistingCss: \"useExistingCss\", printDelay: \"printDelay\", printStyle: \"printStyle\", styleSheetFile: \"styleSheetFile\", printSectionId: \"printSectionId\", printTitle: \"printTitle\" } });\r\nNgxPrintDirective.propDecorators = {\r\n    printSectionId: [{ type: Input }],\r\n    printTitle: [{ type: Input }],\r\n    useExistingCss: [{ type: Input }],\r\n    printDelay: [{ type: Input }],\r\n    printStyle: [{ type: Input }],\r\n    styleSheetFile: [{ type: Input }],\r\n    print: [{ type: HostListener, args: ['click',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPrintDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"button[ngxPrint]\"\n            }]\n    }], function () { return []; }, { useExistingCss: [{\n            type: Input\n        }], printDelay: [{\n            type: Input\n        }], printStyle: [{\n            type: Input\n        }], styleSheetFile: [{\n            type: Input\n        }], \n    /**\n     *\n     *\n     * \\@memberof NgxPrintDirective\n     * @return {?}\n     */\n    print: [{\n            type: HostListener,\n            args: ['click']\n        }], printSectionId: [{\n            type: Input\n        }], printTitle: [{\n            type: Input\n        }] }); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxPrintModule {\r\n}\nNgxPrintModule.ɵfac = function NgxPrintModule_Factory(t) { return new (t || NgxPrintModule)(); };\nNgxPrintModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxPrintModule });\nNgxPrintModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPrintModule, { declarations: [NgxPrintDirective], exports: [NgxPrintDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPrintModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxPrintDirective],\n                imports: [],\n                exports: [NgxPrintDirective]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPrintDirective, NgxPrintModule };\n\n//# sourceMappingURL=ngx-print.js.map","\nimport { Component, OnInit } from '@angular/core';\nimport * as moment from 'moment';\nimport { ApiService } from '../../services/api.service';\nimport { UtilService } from '../../services/util.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  stores: any[] = [];\n  storeId: any;\n  storecommission: any;\n  from: any;\n  to: any;\n  allOrders: any[] = [];\n  storeOrder: any[] = [];\n  totalAmount: any = 0;\n  commisionAmount: any = 0;\n  toPay: any = 0;\n  apiCalled: boolean;\n  storename: any;\n\n  totalAmountsFromOrder: any = 0;\n  constructor(\n    public util: UtilService,\n    public api: ApiService\n  ) {\n    this.storeId = parseInt(localStorage.getItem('uid'));\n  }\n\n  ngOnInit(): void {\n  }\n\n  getStats() {\n    console.log('from', this.from);\n    console.log('to', this.to);\n    if (this.from && this.to) {\n\n      console.log('ok');\n      const param = {\n        id: localStorage.getItem('uid'),\n        from: moment(this.from, 'YYYY-MM-DD HH:mm A').utcOffset(\"+05:30\").format('YYYY-MM-DD HH:mm'),\n        to: moment(this.to, 'YYYY-MM-DD HH:mm A').utcOffset(\"+05:30\").format('YYYY-MM-DD 23:59'),\n      };\n      console.log(param);\n      this.util.show();\n      this.apiCalled = false;\n      this.storeOrder = [];\n      this.api.post_private('v1/orders/getStoreStatsDataWithDates', param).then((data: any) => {\n        this.apiCalled = true;\n        this.util.hide();\n        console.log(data);\n        if (data && data.status == 200 && data.data.length) {\n          this.storecommission = data.commission.commission;\n          console.log('commustion', this.storecommission);\n          let total = 0;\n          data.data.forEach(async (element) => {\n            if (((x) => { try { JSON.parse(x); return true; } catch (e) { return false } })(element.orders)) {\n              element.orders = JSON.parse(element.orders);\n              element.date_time = moment(element.date_time).format('dddd, MMMM Do YYYY');\n              element.orders = await element.orders.filter(x => x.store_id == this.storeId);\n              console.log(element.discount);\n              if (((x) => { try { JSON.parse(x); return true; } catch (e) { return false } })(element.status)) {\n                const info = JSON.parse(element.status);\n\n                const selected = await info.filter(x => x.id == this.storeId);\n                if (selected && selected.length) {\n                  if (selected[0].status == 'delivered') {\n                    await element.orders.forEach(calc => {\n                      if (calc.variations && calc.variations !== '' && typeof calc.variations == 'string') {\n                        calc.variations = JSON.parse(calc.variations);\n                        console.log(calc['variant']);\n                        if (calc[\"variant\"] == undefined) {\n                          calc['variant'] = 0;\n                        }\n                      }\n                      if (calc && calc.discount == 0) {\n                        if (calc.size == 1 || calc.size == 1) {\n                          if (calc.variations[0].items[calc.variant].discount && calc.variations[0].items[calc.variant].discount !== 0) {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].discount) * calc.quantiy);\n                          } else {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].price) * calc.quantiy);\n                          }\n                        } else {\n                          total = total + (parseFloat(calc.original_price) * calc.quantiy);\n                        }\n                      } else {\n                        if (calc.size == 1 || calc.size == 1) {\n                          if (calc.variations[0].items[calc.variant].discount && calc.variations[0].items[calc.variant].discount !== 0) {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].discount) * calc.quantiy);\n                          } else {\n                            total = total + (parseFloat(calc.variations[0].items[calc.variant].price) * calc.quantiy);\n                          }\n                        } else {\n                          total = total + (parseFloat(calc.sell_price) * calc.quantiy);\n                        }\n                      }\n                    });\n                    this.storeOrder.push(element);\n                  }\n                }\n              }\n            }\n          });\n\n          setTimeout(() => {\n            function percentage(num, per) {\n              return (num / 100) * per;\n            }\n            console.log(this.storeOrder);\n            console.log(total, this.storecommission);\n            const totalPrice = percentage(total, parseFloat(this.storecommission));\n            console.log('commistion====>>>>>', totalPrice.toFixed(2));\n            this.commisionAmount = totalPrice.toFixed(2);\n            this.totalAmount = total;\n            this.toPay = this.commisionAmount;\n          }, 1000);\n\n        }\n      }, error => {\n        this.util.hide();\n        console.log(error);\n        this.apiCalled = true;\n        this.util.error(this.util.translate('Something went wrong'));\n      }).catch((error) => {\n        this.util.hide();\n        console.log(error);\n        this.apiCalled = true;\n        this.util.error(this.util.translate('Something went wrong'));\n      });\n    } else {\n      console.log('not valid');\n      this.util.error(this.util.translate('All Fields are required'));\n      return false;\n    }\n  }\n\n  getCommisions(total) {\n    return ((parseFloat(total) * this.storecommission) / 100).toFixed(2);\n  }\n\n  donwloadPDF() {\n\n  }\n  today() {\n    return moment().format('ll');\n  }\n  getDate(date) {\n    return moment(date).format('ll');\n  }\n  getName() {\n    return this.storeOrder[0].name + '_' + moment(this.from).format('DDMMYYYY') + '_' + moment(this.to).format('DDMMYYYY');\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StatsRoutingModule } from './stats-routing.module';\nimport { StatsComponent } from './stats.component';\nimport { NgxPrintModule } from 'ngx-print';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    StatsComponent\n  ],\n  imports: [\n    CommonModule,\n    StatsRoutingModule,\n    NgxPrintModule,\n    NgxSpinnerModule,\n    FormsModule\n  ]\n})\nexport class StatsModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StatsComponent } from './stats.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StatsRoutingModule { }\n","export default \"p {\\n  margin: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzdGF0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLHNCQUFBO0FBQUoiLCJmaWxlIjoic3RhdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbnAge1xuICAgIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7XG59XG4iXX0= */\";"],"sourceRoot":"webpack:///"}